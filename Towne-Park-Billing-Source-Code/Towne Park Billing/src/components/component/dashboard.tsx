/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/TweD6pkAghP
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/

/** Add fonts into your Next.js project:

import { Inter } from 'next/font/google'

inter({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
import { Button } from "@/components/ui/button";
import {
  CardDescription,
  CardTitle,
  CardHeader,
  CardContent,
  Card,
} from "@/components/ui/card";
import { ResponsiveLine } from "@nivo/line";
import { ResponsiveBar } from "@nivo/bar";

export function Dashboard() {
  return (
    <div>
      <div className="flex items-center justify-between mb-4">
        <h1 className="text-xl font-bold mb-4">Dashboard</h1>
        <Button data-qa-id="button-bulkInvoicing-desktop" className="hidden sm:flex" size="lg" variant="default">
          <PlusIcon className="mr-2 h-4 w-4" />
          Bulk Invoicing
        </Button>
      </div>
      <div className="grid gap-4 mb-4 md:grid-cols-2 lg:grid-cols-3">
        <Card>
          <CardHeader>
            <CardDescription>Total Revenue</CardDescription>
            <CardTitle>$125,234.56</CardTitle>
          </CardHeader>
          <CardContent>
            <LineChart className="aspect-[9/4]" />
          </CardContent>
        </Card>
        <Card>
          <CardHeader>
            <CardDescription>Outstanding Invoices</CardDescription>
            <CardTitle>$32,456.78</CardTitle>
          </CardHeader>
          <CardContent>
            <BarChart className="aspect-[9/4]" />
          </CardContent>
        </Card>
        <Card>
          <CardHeader>
            <CardDescription>Average Invoice Amount</CardDescription>
            <CardTitle>$1,234.56</CardTitle>
          </CardHeader>
          <CardContent>
            <LineChart className="aspect-square" />
          </CardContent>
        </Card>
      </div>
      <div className="grid gap-6 md:grid-cols-2 lg:grid-cols-3">
        <Card>
          <CardHeader>
            <CardDescription>Overdue Invoices</CardDescription>
            <CardTitle>24</CardTitle>
          </CardHeader>
          <CardContent>
            <BarChart className="aspect-[9/4]" />
          </CardContent>
        </Card>
        <Card>
          <CardHeader>
            <CardDescription>Paid Invoices</CardDescription>
            <CardTitle>142</CardTitle>
          </CardHeader>
          <CardContent>
            <LineChart className="aspect-[9/4]" />
          </CardContent>
        </Card>
        <div className="flex flex-col justify-center gap-4 sm:flex-row">
          <Button data-qa-id="button-bulkInvoicing-mobile" className="flex-1" size="lg" variant="default">
            <PlusIcon className="mr-2 h-4 w-4" />
            Bulk Invoicing
          </Button>
          <Button data-qa-id="button-createInvoice" className="flex-1" size="lg" variant="outline">
            Create Invoice
          </Button>
        </div>
      </div>
    </div>
  );
}

function BarChart(props: React.HTMLAttributes<HTMLDivElement>) {
  return (
    <div {...props}>
      <ResponsiveBar
        data={[
          { name: "Jan", count: 111 },
          { name: "Feb", count: 157 },
          { name: "Mar", count: 129 },
          { name: "Apr", count: 150 },
          { name: "May", count: 119 },
          { name: "Jun", count: 72 },
        ]}
        keys={["count"]}
        indexBy="name"
        margin={{ top: 0, right: 0, bottom: 40, left: 40 }}
        padding={0.3}
        colors={["#2563eb"]}
        axisBottom={{
          tickSize: 0,
          tickPadding: 16,
        }}
        axisLeft={{
          tickSize: 0,
          tickValues: 4,
          tickPadding: 16,
        }}
        gridYValues={4}
        theme={{
          tooltip: {
            chip: {
              borderRadius: "9999px",
            },
            container: {
              fontSize: "12px",
              textTransform: "capitalize",
              borderRadius: "6px",
            },
          },
          grid: {
            line: {
              stroke: "#f3f4f6",
            },
          },
        }}
        tooltipLabel={({ id }) => `${id}`}
        enableLabel={false}
        role="application"
        ariaLabel="A bar chart showing data"
      />
    </div>
  );
}

function LineChart(props: React.HTMLAttributes<HTMLDivElement>) {
  return (
    <div {...props}>
      <ResponsiveLine
        data={[
          {
            id: "Desktop",
            data: [
              { x: "Jan", y: 43 },
              { x: "Feb", y: 137 },
              { x: "Mar", y: 61 },
              { x: "Apr", y: 145 },
              { x: "May", y: 26 },
              { x: "Jun", y: 154 },
            ],
          },
          {
            id: "Mobile",
            data: [
              { x: "Jan", y: 60 },
              { x: "Feb", y: 48 },
              { x: "Mar", y: 177 },
              { x: "Apr", y: 78 },
              { x: "May", y: 96 },
              { x: "Jun", y: 204 },
            ],
          },
        ]}
        margin={{ top: 10, right: 10, bottom: 40, left: 40 }}
        xScale={{
          type: "point",
        }}
        yScale={{
          type: "linear",
        }}
        axisTop={null}
        axisRight={null}
        axisBottom={{
          tickSize: 0,
          tickPadding: 16,
        }}
        axisLeft={{
          tickSize: 0,
          tickValues: 5,
          tickPadding: 16,
        }}
        colors={["#2563eb", "#e11d48"]}
        pointSize={6}
        useMesh={true}
        gridYValues={6}
        theme={{
          tooltip: {
            chip: {
              borderRadius: "9999px",
            },
            container: {
              fontSize: "12px",
              textTransform: "capitalize",
              borderRadius: "6px",
            },
          },
          grid: {
            line: {
              stroke: "#f3f4f6",
            },
          },
        }}
        role="application"
      />
    </div>
  );
}

function PlusIcon(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M5 12h14" />
      <path d="M12 5v14" />
    </svg>
  );
}