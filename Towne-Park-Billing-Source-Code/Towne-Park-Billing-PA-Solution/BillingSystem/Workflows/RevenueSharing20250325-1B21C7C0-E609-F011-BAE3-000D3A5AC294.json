{
  "properties": {
    "connectionReferences": {
      "shared_sql": {
        "api": {
          "name": "shared_sql"
        },
        "connection": {
          "connectionReferenceLogicalName": "bs_TowneParkEDW"
        },
        "runtimeSource": "embedded"
      }
    },
    "definition": {
      "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
      "contentVersion": "undefined",
      "parameters": {
        "$authentication": {
          "defaultValue": {},
          "type": "SecureObject"
        },
        "$connections": {
          "defaultValue": {},
          "type": "Object"
        }
      },
      "triggers": {
        "manual": {
          "type": "Request",
          "kind": "Button",
          "inputs": {
            "schema": {
              "type": "object",
              "properties": {
                "text": {
                  "description": "Site Number",
                  "title": "Site",
                  "type": "string",
                  "x-ms-content-hint": "TEXT",
                  "x-ms-dynamically-added": true
                },
                "number": {
                  "description": "Invoice Group Number",
                  "title": "Invoice",
                  "type": "number",
                  "x-ms-content-hint": "NUMBER",
                  "x-ms-dynamically-added": true
                },
                "date": {
                  "description": "Please enter or select a date (YYYY-MM-DD)",
                  "format": "date",
                  "title": "Start Date",
                  "type": "string",
                  "x-ms-content-hint": "DATE",
                  "x-ms-dynamically-added": true
                },
                "date_1": {
                  "description": "Please enter or select a date (YYYY-MM-DD)",
                  "format": "date",
                  "title": "End Date",
                  "type": "string",
                  "x-ms-content-hint": "DATE",
                  "x-ms-dynamically-added": true
                },
                "text_1": {
                  "description": "Please enter your input",
                  "title": "Configuration Object",
                  "type": "string",
                  "x-ms-content-hint": "TEXT",
                  "x-ms-dynamically-added": true
                },
                "date_2": {
                  "description": "Please enter or select a date (YYYY-MM-DD)",
                  "format": "date",
                  "title": "Contract Start Date",
                  "type": "string",
                  "x-ms-content-hint": "DATE",
                  "x-ms-dynamically-added": true
                },
                "text_2": {
                  "description": "Comma separated string of Contract Types integer values",
                  "title": "ContractType",
                  "type": "string",
                  "x-ms-content-hint": "TEXT",
                  "x-ms-dynamically-added": true
                }
              },
              "required": [
                "text",
                "number",
                "date",
                "date_1",
                "text_1",
                "date_2",
                "text_2"
              ]
            }
          },
          "metadata": {
            "operationMetadataId": "1f49516f-9a78-4448-9e0a-fa1ec79aec7a"
          }
        }
      },
      "actions": {
        "Respond_to_a_Power_App_or_flow": {
          "type": "Response",
          "kind": "PowerApp",
          "inputs": {
            "schema": {
              "type": "object",
              "properties": {
                "lineitems": {
                  "title": "LineItems",
                  "x-ms-dynamically-added": true,
                  "type": "string"
                },
                "invoicesubtotal": {
                  "title": "InvoiceSubTotal",
                  "x-ms-dynamically-added": true,
                  "type": "number"
                },
                "revenuedistributionitems": {
                  "title": "RevenueDistributionItems",
                  "x-ms-dynamically-added": true,
                  "type": "string"
                }
              },
              "additionalProperties": {}
            },
            "statusCode": 200,
            "body": {
              "lineitems": "@{variables('Line Items')}",
              "invoicesubtotal": "@variables('Total Amount Due')",
              "revenuedistributionitems": "@{variables('Revenue Distribution Items')}"
            }
          },
          "runAfter": {
            "Append_to_array_variable": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "d9057c8b-35a0-4614-8285-4fe3d8bd39a8"
          }
        },
        "Initialize_variable_-_Line_Items_-_Array": {
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "Line Items",
                "type": "array",
                "value": []
              }
            ]
          },
          "runAfter": {},
          "metadata": {
            "operationMetadataId": "78e82d2c-6eb8-45dd-a1b9-dc440da1a51d"
          }
        },
        "Initialize_variable_-_Total_Revenue_for_Threshold": {
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "Total Revenue for Threshold",
                "type": "float",
                "value": 0
              }
            ]
          },
          "runAfter": {},
          "metadata": {
            "operationMetadataId": "54ab7add-0300-4c8d-9fdd-480fc625ba91"
          }
        },
        "Parse_JSON_-_Deserialize_Configuration_String_to_JSON_Object": {
          "type": "ParseJson",
          "inputs": {
            "content": "@json(triggerBody()?['text_1'])",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "bs_tierdata": {
                    "type": "string"
                  },
                  "bs_revenuecodedata": {
                    "type": "string"
                  },
                  "bs_revenueaccumulationtype@OData.Community.Display.V1.FormattedValue": {
                    "type": "string"
                  },
                  "bs_revenueaccumulationtype": {
                    "type": "integer"
                  },
                  "bs_invoicegroup@OData.Community.Display.V1.FormattedValue": {
                    "type": "string"
                  },
                  "bs_invoicegroup": {
                    "type": "integer"
                  },
                  "bs_validationthresholdamount@OData.Community.Display.V1.FormattedValue": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "bs_validationthresholdamount": {
                    "type": [
                      "integer",
                      "number",
                      "null"
                    ]
                  },
                  "bs_validationthresholdtype@OData.Community.Display.V1.FormattedValue": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "bs_validationthresholdtype": {
                    "type": [
                      "integer",
                      "number",
                      "null"
                    ]
                  }
                }
              }
            }
          },
          "runAfter": {
            "Are_Input_Parameters_Valid_Condition": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "e779f8d6-0e4e-409c-af3b-350b9f497c0b"
          }
        },
        "Initialize_variable_-_Amount_Due": {
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "Amount Due",
                "type": "float",
                "value": 0
              }
            ]
          },
          "runAfter": {},
          "metadata": {
            "operationMetadataId": "9392330d-fb1b-4d47-98ee-2d7316822fca"
          }
        },
        "Compose_-_Line_Item_Object": {
          "type": "Compose",
          "inputs": {
            "title": "Towne Park Fees for Services",
            "amount": "@variables('Total Amount Due')",
            "code": "4790",
            "description": "@concat('Total Base for Fee Calculation: ',formatNumber(variables('Total Revenue'),'C2'))"
          },
          "runAfter": {
            "For_each_Threshold": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "1c39df04-e29d-4788-b292-3902716cf6f5"
          }
        },
        "Append_to_array_variable": {
          "type": "AppendToArrayVariable",
          "inputs": {
            "name": "Line Items",
            "value": "@outputs('Compose_-_Line_Item_Object')"
          },
          "runAfter": {
            "Compose_-_Line_Item_Object": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "cf9f9231-ef6d-491c-9482-8a756c61d82e"
          }
        },
        "Initialize_variable_-_Previous_Limit": {
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "Previous Limit",
                "type": "float",
                "value": 0
              }
            ]
          },
          "runAfter": {},
          "metadata": {
            "operationMetadataId": "3544b875-cf4c-4aca-8fb1-d24dfa7eac7d"
          }
        },
        "Initialize_variable_-_Tier_Amount": {
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "Tier Amount",
                "type": "float",
                "value": 0
              }
            ]
          },
          "runAfter": {},
          "metadata": {
            "operationMetadataId": "224b7f87-6692-4084-94de-310b3ce4b990"
          }
        },
        "Initialize_variable_-_Current_Limit": {
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "Current Limit",
                "type": "float",
                "value": 0
              }
            ]
          },
          "runAfter": {},
          "metadata": {
            "operationMetadataId": "958ce718-87b5-4c8c-92e1-60b35fd6d3d5"
          }
        },
        "Initialize_variable_-_Total_Amount_Due": {
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "Total Amount Due",
                "type": "float",
                "value": 0
              }
            ]
          },
          "runAfter": {},
          "metadata": {
            "operationMetadataId": "1c1eac01-bf87-45d1-bb85-fe03cabf1554"
          }
        },
        "For_each_Threshold": {
          "type": "Foreach",
          "foreach": "@outputs('Parse_JSON_-_Deserialize_Configuration_String_to_JSON_Object')['body']",
          "actions": {
            "Parse_JSON_-_Deserialize_Tier_Data_to_Array": {
              "type": "ParseJson",
              "inputs": {
                "content": "@items('For_each_Threshold')['bs_tierdata']",
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "SharePercentage": {
                        "type": [
                          "integer",
                          "number",
                          "null"
                        ]
                      },
                      "Amount": {
                        "type": [
                          "integer",
                          "number",
                          "null"
                        ]
                      }
                    }
                  }
                }
              },
              "runAfter": {
                "Set_variable_-_Reset_Previous_Limit_to_0": [
                  "Succeeded"
                ],
                "Set_variable_-_Total_Revenue": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "fee95c73-ed5f-4e69-acc6-0da116cd940f"
              }
            },
            "Compose_-_Get_Threshold_Codes": {
              "type": "Compose",
              "inputs": "@join(body('Parse_JSON_-_Revenue_Codes'), ''' or REVENUE_CODE eq ''')",
              "runAfter": {
                "Parse_JSON_-_Revenue_Codes": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "ec2de405-a9c4-4fb4-a8a3-941ac35c9a10"
              }
            },
            "Parse_JSON_-_Revenue_Codes": {
              "type": "ParseJson",
              "inputs": {
                "content": "@items('For_each_Threshold')?['bs_revenuecodedata']",
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "metadata": {
                "operationMetadataId": "48935e54-9b1d-414b-8533-2cb482493b63"
              }
            },
            "Compose_-_Get_Revenue_Threshold_Data_String": {
              "type": "Compose",
              "inputs": "@concat('(REVENUE_CODE eq ''', outputs('Compose_-_Get_Threshold_Codes') , ''')')",
              "runAfter": {
                "Compose_-_Get_Threshold_Codes": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "a29013bb-2f3d-4dbf-aab9-9ec43aa67436"
              }
            },
            "Set_variable_-_Total_Revenue_for_Threshold": {
              "type": "SetVariable",
              "inputs": {
                "name": "Total Revenue for Threshold",
                "value": "@coalesce(first(if(contains(triggerBody()?['text_2'], '126840005'), outputs('Get_rows_(V2)_-_Get_Monthly_Revenue_for_Threshold_for_Bell_Service_Enabled')?['body/value'], outputs('Get_rows_(V2)_-_Get_Monthly_Revenue_for_Threshold')?['body/value']))?['TotalNetExternalRevenue'], 0)"
              },
              "runAfter": {
                "Condition_-_Both_Bell_Service_and_Revenue_Share_are_Enabled": [
                  "SUCCEEDED"
                ]
              },
              "metadata": {
                "operationMetadataId": "34d9deb1-9606-4129-961c-9d0b85bb0466"
              }
            },
            "For_each_Tier": {
              "type": "Foreach",
              "foreach": "@outputs('Parse_JSON_-_Deserialize_Tier_Data_to_Array')['body']",
              "actions": {
                "Parse_JSON_tier_data": {
                  "type": "ParseJson",
                  "inputs": {
                    "content": "@items('For_each_Tier')",
                    "schema": {
                      "type": "object",
                      "properties": {
                        "SharePercentage": {
                          "type": [
                            "integer",
                            "number"
                          ]
                        },
                        "Amount": {
                          "type": [
                            "integer",
                            "number"
                          ]
                        }
                      }
                    }
                  },
                  "metadata": {
                    "operationMetadataId": "2b04043f-3e4f-46bb-80b7-d3d6f87b7fe0"
                  }
                },
                "Set_variable_Current_Limit": {
                  "type": "SetVariable",
                  "inputs": {
                    "name": "Current Limit",
                    "value": "@body('Parse_JSON_tier_data')?['Amount']"
                  },
                  "runAfter": {
                    "Parse_JSON_tier_data": [
                      "Succeeded"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "3e82a8e9-0ee3-4457-aa79-3438d265364c"
                  }
                },
                "Condition_-_Is_Prevous_Limit_less_than_Total_Revenue_Accumulation_Start_to_Date": {
                  "type": "If",
                  "expression": {
                    "and": [
                      {
                        "less": [
                          "@variables('Previous Limit')",
                          "@variables('Total Revenue Accumulation Start To Date')"
                        ]
                      }
                    ]
                  },
                  "actions": {
                    "Set_variable_-_Previous_Limit_to_Total_Revenue_Accumulation_Start_to_Date": {
                      "type": "SetVariable",
                      "inputs": {
                        "name": "Previous Limit",
                        "value": "@variables('Total Revenue Accumulation Start To Date')"
                      },
                      "metadata": {
                        "operationMetadataId": "82fcffe2-90e9-41b6-98c2-3512ff41894d"
                      }
                    }
                  },
                  "else": {
                    "actions": {}
                  },
                  "runAfter": {
                    "Parse_JSON_tier_data": [
                      "Succeeded"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "c3bc3fa0-360f-459f-abdc-972801452199"
                  }
                },
                "Condition_-_is_Previous_Limit_greater_than_Current_Limit": {
                  "type": "If",
                  "expression": {
                    "and": [
                      {
                        "greater": [
                          "@variables('Previous Limit')",
                          "@variables('Current Limit')"
                        ]
                      },
                      {
                        "not": {
                          "equals": [
                            "@variables('Current Limit')",
                            0
                          ]
                        }
                      }
                    ]
                  },
                  "actions": {},
                  "else": {
                    "actions": {
                      "Set_variable_Tier_Amount": {
                        "type": "SetVariable",
                        "inputs": {
                          "name": "Tier Amount",
                          "value": "@if(or(equals(variables('Current Limit'),0),lessOrEquals(variables('Total Revenue for Threshold'),variables('Current Limit'))),sub(variables('Total Revenue for Threshold'),variables('Previous Limit')),sub(variables('Current Limit'),variables('Previous Limit')))\r\n"
                        },
                        "metadata": {
                          "operationMetadataId": "192c1f19-6a5d-4e12-ab94-747beffdd044"
                        }
                      },
                      "Set_variable_Amount_Due": {
                        "type": "SetVariable",
                        "inputs": {
                          "name": "Amount Due",
                          "value": "@if(greater(variables('Tier Amount'),0),mul(variables('Tier Amount'),div(body('Parse_JSON_tier_data')?['SharePercentage'],100)),0)"
                        },
                        "runAfter": {
                          "Set_variable_Tier_Amount": [
                            "Succeeded"
                          ]
                        },
                        "metadata": {
                          "operationMetadataId": "880e3325-1fd3-4089-8beb-1669a4b83099"
                        }
                      },
                      "Compose_Amount_Due": {
                        "type": "Compose",
                        "inputs": "@add(variables('Amount Due'),variables('Total Amount Due'))",
                        "runAfter": {
                          "Set_variable_Amount_Due": [
                            "Succeeded"
                          ]
                        },
                        "metadata": {
                          "operationMetadataId": "5a875144-0d73-444f-ac7e-a11d454ff113"
                        }
                      },
                      "Set_variable_Total_Amount_Due": {
                        "type": "SetVariable",
                        "inputs": {
                          "name": "Total Amount Due",
                          "value": "@outputs('Compose_Amount_Due')"
                        },
                        "runAfter": {
                          "Compose_Amount_Due": [
                            "Succeeded"
                          ]
                        },
                        "metadata": {
                          "operationMetadataId": "517f3b84-452c-4556-afdd-c14546315c8d"
                        }
                      },
                      "Set_variable_Previous_Limit": {
                        "type": "SetVariable",
                        "inputs": {
                          "name": "Previous Limit",
                          "value": "@variables('Current Limit')"
                        },
                        "runAfter": {
                          "Set_variable_Total_Amount_Due": [
                            "Succeeded"
                          ]
                        },
                        "metadata": {
                          "operationMetadataId": "713dcd6d-c5a9-4c71-a6d9-a2ebc5334459"
                        }
                      },
                      "Compose_Revenue_Distribution_Item": {
                        "type": "Compose",
                        "inputs": {
                          "revenueAmount": "@if(\r\n    less(variables('Tier Amount'), 0),\r\n    0.0,\r\n    variables('Tier Amount')\r\n)",
                          "sharePercentageToCharge": "@body('Parse_JSON_tier_data')?['SharePercentage']",
                          "amountDueToTownePark": "@variables('Amount Due')",
                          "tierLimitAmount": "@body('Parse_JSON_tier_data')?['Amount']",
                          "thresholdStructure": "@variables('Threshold Structure Number')"
                        },
                        "runAfter": {
                          "Set_variable_Amount_Due": [
                            "Succeeded"
                          ]
                        },
                        "metadata": {
                          "operationMetadataId": "5c69ebdd-ba3e-440c-9a9f-950a71410d18"
                        }
                      },
                      "Append_to_Revenue_Distribution_Item_Array": {
                        "type": "AppendToArrayVariable",
                        "inputs": {
                          "name": "Revenue Distribution Items",
                          "value": "@outputs('Compose_Revenue_Distribution_Item')"
                        },
                        "runAfter": {
                          "Compose_Revenue_Distribution_Item": [
                            "Succeeded"
                          ]
                        },
                        "metadata": {
                          "operationMetadataId": "571b2807-5a6a-4b42-9a90-6773277d167a"
                        }
                      }
                    }
                  },
                  "runAfter": {
                    "Set_variable_Current_Limit": [
                      "Succeeded"
                    ],
                    "Condition_-_Is_Prevous_Limit_less_than_Total_Revenue_Accumulation_Start_to_Date": [
                      "Succeeded"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "697a89d9-8ef0-4fbc-8103-f3e889a34489"
                  }
                }
              },
              "runAfter": {
                "Set_variable": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "f10b3407-7a1a-4fb5-bfbc-c2f49625fbb4"
              }
            },
            "Set_variable_-_Reset_Previous_Limit_to_0": {
              "type": "SetVariable",
              "inputs": {
                "name": "Previous Limit",
                "value": 0
              },
              "runAfter": {
                "Condition_-_Both_Bell_Service_and_Revenue_Share_are_Enabled": [
                  "SUCCEEDED"
                ]
              },
              "metadata": {
                "operationMetadataId": "2559dfa3-905d-408e-8ea2-5ed10c38050b"
              }
            },
            "Compose_-_Total_Revenue": {
              "type": "Compose",
              "inputs": "@add(variables('Total Revenue'),variables('Total Revenue for Threshold'))",
              "runAfter": {
                "Set_variable_-_Total_Revenue_for_Threshold": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "2a0d1ee0-d882-4bf1-bd6d-54a169d6ae91"
              }
            },
            "Set_variable_-_Total_Revenue": {
              "type": "SetVariable",
              "inputs": {
                "name": "Total Revenue",
                "value": "@outputs('Compose_-_Total_Revenue')"
              },
              "runAfter": {
                "Compose_-_Total_Revenue": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "294cbf9d-aa8a-4287-9298-3cd3e982c0f7"
              }
            },
            "Condition_-_Is_Accumulation_Annual": {
              "type": "If",
              "expression": {
                "or": [
                  {
                    "equals": [
                      "@items('For_each_Threshold')?['bs_revenueaccumulationtype@OData.Community.Display.V1.FormattedValue']",
                      "Annual Calendar"
                    ]
                  },
                  {
                    "equals": [
                      "@items('For_each_Threshold')?['bs_revenueaccumulationtype@OData.Community.Display.V1.FormattedValue']",
                      "Annual Anniversary"
                    ]
                  }
                ]
              },
              "actions": {
                "Compose_-Revenue_Accumulation_Start_Date": {
                  "type": "Compose",
                  "inputs": "@if(\r\n    equals(items('For_each_Threshold')?['bs_revenueaccumulationtype@OData.Community.Display.V1.FormattedValue'], 'Annual Calendar'),\r\n    concat(formatDateTime(triggerBody()?['date_2'], 'yyyy'), '-01-01'), \r\n    if(\r\n        greaterOrEquals(formatDateTime(triggerBody()?['date_2'], 'MMdd'), formatDateTime(triggerBody()?['date_2'], 'MM-dd')),\r\n        concat(formatDateTime(triggerBody()?['date_2'], 'yyyy'), '-', formatDateTime(triggerBody()?['date_2'], 'MM-dd')),\r\n        concat(sub(int(formatDateTime(triggerBody()?['date_2'], 'yyyy')), 1), '-', formatDateTime(triggerBody()?['date_2'], 'MM-dd'))\r\n    )\r\n)",
                  "metadata": {
                    "operationMetadataId": "2a381e15-d9ba-436c-a9e4-f8febbcbd79e"
                  }
                },
                "Get_rows_(V2)_-_Get_Previous_Revenue_Contract_Start_to_Date_for_Threshold": {
                  "type": "OpenApiConnection",
                  "inputs": {
                    "parameters": {
                      "server": "default",
                      "database": "default",
                      "table": "[dbo].[vwREVENUE_DAILY_DETAIL_INVOICE]",
                      "$apply": "filter(SITE eq '@{triggerBody()?['text']}' and date(DATE) ge date(@{formatDateTime(outputs('Compose_-Revenue_Accumulation_Start_Date'), 'yyyy-MM-dd')}) and date(DATE) lt date(@{formatDateTime(triggerBody()?['date'], 'yyyy-MM-dd')}) and DEPOSIT_FLAG ne 'V' and REVENUE_CATEGORY ne 'Per Man Hour' and @{outputs('Compose_-_Get_Revenue_Threshold_Data_String')})/aggregate(NETEXTERNALREVENUE with sum as TotalNetExternalRevenue)",
                      "$select": "TotalNetExternalRevenue"
                    },
                    "host": {
                      "apiId": "/providers/Microsoft.PowerApps/apis/shared_sql",
                      "operationId": "GetItems_V2",
                      "connectionName": "shared_sql"
                    }
                  },
                  "runAfter": {
                    "Compose_-Revenue_Accumulation_Start_Date": [
                      "Succeeded"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "0aca9c06-c347-498a-8af3-89262f9acd71"
                  }
                },
                "Set_variable_-_Total_Revenue_Accumulation_Start_to_Date": {
                  "type": "SetVariable",
                  "inputs": {
                    "name": "Total Revenue Accumulation Start To Date",
                    "value": "@coalesce(first(outputs('Get_rows_(V2)_-_Get_Previous_Revenue_Contract_Start_to_Date_for_Threshold')?['body/value'])?['TotalNetExternalRevenue'], 0)\r\n"
                  },
                  "runAfter": {
                    "Get_rows_(V2)_-_Get_Previous_Revenue_Contract_Start_to_Date_for_Threshold": [
                      "Succeeded"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "91806a15-294b-46d7-965d-7392f3c74c6a"
                  }
                }
              },
              "else": {
                "actions": {}
              },
              "runAfter": {
                "Compose_-_Get_Revenue_Threshold_Data_String": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "a4e9fb06-bb80-4195-aeff-237bd76d0c75"
              }
            },
            "Compose_-_Total_Monthly_Revenue": {
              "type": "Compose",
              "inputs": "@add(variables('Total Revenue for Threshold'),variables('Total Revenue Accumulation Start To Date'))",
              "runAfter": {
                "Parse_JSON_-_Deserialize_Tier_Data_to_Array": [
                  "Succeeded"
                ],
                "Condition_-_Is_Accumulation_Annual": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "95604591-35ae-4ab6-aa70-03a147445e18"
              }
            },
            "Set_variable": {
              "type": "SetVariable",
              "inputs": {
                "name": "Total Revenue for Threshold",
                "value": "@outputs('Compose_-_Total_Monthly_Revenue')"
              },
              "runAfter": {
                "Compose_-_Total_Monthly_Revenue": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "1d9ee46e-9e95-4320-ad46-3d6034648968"
              }
            },
            "Increment_variable_Threshold_Structure_Number": {
              "type": "IncrementVariable",
              "inputs": {
                "name": "Threshold Structure Number",
                "value": 1
              },
              "runAfter": {
                "For_each_Tier": [
                  "Succeeded"
                ]
              }
            },
            "Condition_-_Both_Bell_Service_and_Revenue_Share_are_Enabled": {
              "type": "If",
              "expression": {
                "and": [
                  {
                    "equals": [
                      "@contains(triggerBody()?['text_2'], '126840005')",
                      "@true"
                    ]
                  }
                ]
              },
              "actions": {
                "Get_rows_(V2)_-_Get_Monthly_Revenue_for_Threshold_for_Bell_Service_Enabled": {
                  "type": "OpenApiConnection",
                  "inputs": {
                    "parameters": {
                      "server": "default",
                      "database": "default",
                      "table": "[dbo].[vwREVENUE_DAILY_DETAIL_INVOICE]",
                      "$apply": "filter(SITE eq '@{triggerBody()?['text']}' and year(DATE) eq @{formatDateTime(triggerBody()?['date'],'yyyy')} and month(DATE) eq @{formatDateTime(triggerBody()?['date'],'MM')} and DEPOSIT_FLAG ne 'V' and REVENUE_CATEGORY ne 'Per Man Hour' and REVENUE_CODE ne 'OR1' and REVENUE_CODE ne 'OR2' and @{outputs('Compose_-_Get_Revenue_Threshold_Data_String')} )/aggregate(NETEXTERNALREVENUE with sum as TotalNetExternalRevenue)",
                      "$select": "TotalNetExternalRevenue"
                    },
                    "host": {
                      "apiId": "/providers/Microsoft.PowerApps/apis/shared_sql",
                      "operationId": "GetItems_V2",
                      "connectionName": "shared_sql"
                    }
                  }
                }
              },
              "else": {
                "actions": {
                  "Get_rows_(V2)_-_Get_Monthly_Revenue_for_Threshold": {
                    "type": "OpenApiConnection",
                    "inputs": {
                      "parameters": {
                        "server": "default",
                        "database": "default",
                        "table": "[dbo].[vwREVENUE_DAILY_DETAIL_INVOICE]",
                        "$apply": "filter(SITE eq '@{triggerBody()?['text']}' and year(DATE) eq @{formatDateTime(triggerBody()?['date'],'yyyy')} and month(DATE) eq @{formatDateTime(triggerBody()?['date'],'MM')} and DEPOSIT_FLAG ne 'V' and REVENUE_CATEGORY ne 'Per Man Hour' and @{outputs('Compose_-_Get_Revenue_Threshold_Data_String')})/aggregate(NETEXTERNALREVENUE with sum as TotalNetExternalRevenue)",
                        "$select": "TotalNetExternalRevenue"
                      },
                      "host": {
                        "apiId": "/providers/Microsoft.PowerApps/apis/shared_sql",
                        "operationId": "GetItems_V2",
                        "connectionName": "shared_sql"
                      }
                    }
                  }
                }
              },
              "runAfter": {
                "Compose_-_Get_Revenue_Threshold_Data_String": [
                  "Succeeded"
                ]
              }
            }
          },
          "runAfter": {
            "Condition_-_revenue_share_is_not_set_for_invoice_group": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "731e7683-d999-428d-aa02-6d3f6aceffc9"
          }
        },
        "Initialize_variable_-_Total_Revenue": {
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "Total Revenue",
                "type": "float",
                "value": 0
              }
            ]
          },
          "runAfter": {},
          "metadata": {
            "operationMetadataId": "467a962a-bde0-4382-b8e2-b58be38e572c"
          }
        },
        "Initialize_variable_-_Revenue_Accumulation_Type": {
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "Revenue Accumulation Type",
                "type": "string"
              }
            ]
          },
          "runAfter": {},
          "metadata": {
            "operationMetadataId": "8349460b-6c50-43f4-8a02-f03a899001ba"
          }
        },
        "Initialize_variable_-_Total_Revenue_Accumulation_Start_To_Date": {
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "Total Revenue Accumulation Start To Date",
                "type": "float",
                "value": 0
              }
            ]
          },
          "runAfter": {},
          "metadata": {
            "operationMetadataId": "49d567c8-fe90-412d-af68-31495ebbf508"
          }
        },
        "Are_Input_Parameters_Valid_Condition": {
          "type": "If",
          "expression": {
            "or": [
              {
                "equals": [
                  "@triggerBody()?['text']",
                  "@null"
                ]
              },
              {
                "equals": [
                  "@empty(triggerBody()?['text'])",
                  "@true"
                ]
              },
              {
                "equals": [
                  "@triggerBody()?['number']",
                  "@null"
                ]
              },
              {
                "equals": [
                  "@triggerBody()?['date']",
                  "@null"
                ]
              },
              {
                "equals": [
                  "@triggerBody()?['date_1']",
                  "@null"
                ]
              },
              {
                "equals": [
                  "@triggerBody()?['date_2']",
                  "@null"
                ]
              },
              {
                "equals": [
                  "@triggerBody()?['text_1']",
                  "@null"
                ]
              },
              {
                "equals": [
                  "@empty(triggerBody()?['text_1'])",
                  "@true"
                ]
              },
              {
                "equals": [
                  "@triggerBody()?['text_1']",
                  "[]"
                ]
              }
            ]
          },
          "actions": {
            "Respond_Empty_to_Parent": {
              "type": "Response",
              "kind": "PowerApp",
              "inputs": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "lineitems": {
                      "title": "LineItems",
                      "x-ms-dynamically-added": true,
                      "type": "string"
                    },
                    "invoicesubtotal": {
                      "title": "InvoiceSubTotal",
                      "x-ms-dynamically-added": true,
                      "type": "number"
                    },
                    "revenuedistributionitems": {
                      "title": "RevenueDistributionItems",
                      "x-ms-dynamically-added": true,
                      "type": "string"
                    }
                  },
                  "additionalProperties": {}
                },
                "statusCode": 200,
                "body": {
                  "lineitems": "@{variables('Line Items')}",
                  "invoicesubtotal": "@variables('Total Amount Due')",
                  "revenuedistributionitems": "@{variables('Revenue Distribution Items')}"
                }
              },
              "metadata": {
                "operationMetadataId": "1ea7e6e7-5116-4d76-b62a-0fe8d4d31b09"
              }
            },
            "Terminate": {
              "type": "Terminate",
              "inputs": {
                "runStatus": "Succeeded"
              },
              "runAfter": {
                "Respond_Empty_to_Parent": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "8fde8367-f7a1-4e15-a8ef-c1b0a45d4de3"
              }
            }
          },
          "else": {
            "actions": {}
          },
          "runAfter": {
            "Initialize_variable_-_Total_Revenue_for_Threshold": [
              "Succeeded"
            ],
            "Initialize_variable_-_Line_Items_-_Array": [
              "Succeeded"
            ],
            "Initialize_variable_-_Amount_Due": [
              "Succeeded"
            ],
            "Initialize_variable_-_Previous_Limit": [
              "Succeeded"
            ],
            "Initialize_variable_-_Tier_Amount": [
              "Succeeded"
            ],
            "Initialize_variable_-_Current_Limit": [
              "Succeeded"
            ],
            "Initialize_variable_-_Total_Amount_Due": [
              "Succeeded"
            ],
            "Initialize_variable_-_Total_Revenue": [
              "Succeeded"
            ],
            "Initialize_variable_-_Revenue_Accumulation_Type": [
              "Succeeded"
            ],
            "Initialize_variable_-_Total_Revenue_Accumulation_Start_To_Date": [
              "Succeeded"
            ],
            "Initialize_variable_-Revenue_Distribution_Items_-_Array": [
              "Succeeded"
            ],
            "Initialize_variable_Threshold_Structure_Number": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "ee076b0b-7904-402e-9048-f325e1bea8ba"
          }
        },
        "Initialize_variable_-Revenue_Distribution_Items_-_Array": {
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "Revenue Distribution Items",
                "type": "array",
                "value": []
              }
            ]
          },
          "runAfter": {},
          "metadata": {
            "operationMetadataId": "b9241e95-d4d8-4a34-8f9d-e73160609fce"
          }
        },
        "Compose_-_Revenue_Share_Invoice_Number": {
          "type": "Compose",
          "inputs": "@first(body('Parse_JSON_-_Deserialize_Configuration_String_to_JSON_Object')).bs_invoicegroup",
          "runAfter": {
            "Parse_JSON_-_Deserialize_Configuration_String_to_JSON_Object": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "44603288-02b1-41d4-b8a9-1a817cd67af7"
          }
        },
        "Condition_-_revenue_share_is_not_set_for_invoice_group": {
          "type": "If",
          "expression": {
            "and": [
              {
                "not": {
                  "equals": [
                    "@triggerBody()?['number']",
                    "@outputs('Compose_-_Revenue_Share_Invoice_Number')"
                  ]
                }
              }
            ]
          },
          "actions": {
            "Respond_Empty_to_Parent-copy": {
              "type": "Response",
              "kind": "PowerApp",
              "inputs": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "lineitems": {
                      "title": "LineItems",
                      "x-ms-dynamically-added": true,
                      "type": "string"
                    },
                    "invoicesubtotal": {
                      "title": "InvoiceSubTotal",
                      "x-ms-dynamically-added": true,
                      "type": "number"
                    },
                    "revenuedistributionitems": {
                      "title": "RevenueDistributionItems",
                      "x-ms-dynamically-added": true,
                      "type": "string"
                    }
                  },
                  "additionalProperties": {}
                },
                "statusCode": 200,
                "body": {
                  "lineitems": "@{variables('Line Items')}",
                  "invoicesubtotal": "@variables('Total Amount Due')",
                  "revenuedistributionitems": "@{variables('Revenue Distribution Items')}"
                }
              },
              "metadata": {
                "operationMetadataId": "91b2114c-24a3-43b4-aedf-cda4d9d40111"
              }
            },
            "Terminate-copy": {
              "type": "Terminate",
              "inputs": {
                "runStatus": "Succeeded"
              },
              "runAfter": {
                "Respond_Empty_to_Parent-copy": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "3a65dbf7-8334-42f7-99cb-6bf62c967061"
              }
            }
          },
          "else": {
            "actions": {}
          },
          "runAfter": {
            "Compose_-_Revenue_Share_Invoice_Number": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "33508254-ba71-4e6c-bbaa-b1e84f996bd8"
          }
        },
        "Initialize_variable_Threshold_Structure_Number": {
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "Threshold Structure Number",
                "type": "integer",
                "value": 1
              }
            ]
          },
          "runAfter": {},
          "metadata": {
            "operationMetadataId": "8a49a7f4-a1a6-4e77-85ca-69ed269731d4"
          }
        }
      }
    },
    "templateName": null
  },
  "schemaVersion": "1.0.0.0"
}