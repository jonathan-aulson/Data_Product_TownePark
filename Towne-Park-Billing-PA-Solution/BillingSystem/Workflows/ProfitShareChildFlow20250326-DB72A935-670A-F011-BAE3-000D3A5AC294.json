{
  "properties": {
    "connectionReferences": {
      "shared_sql-1": {
        "api": {
          "name": "shared_sql"
        },
        "connection": {
          "connectionReferenceLogicalName": "bs_TowneParkEDW"
        },
        "runtimeSource": "embedded"
      },
      "shared_commondataserviceforapps-1": {
        "api": {
          "name": "shared_commondataserviceforapps"
        },
        "connection": {
          "connectionReferenceLogicalName": "new_sharedcommondataserviceforapps_7558e"
        },
        "runtimeSource": "embedded"
      }
    },
    "definition": {
      "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
      "contentVersion": "1.0.0.0",
      "parameters": {
        "$authentication": {
          "defaultValue": {},
          "type": "SecureObject"
        },
        "$connections": {
          "defaultValue": {},
          "type": "Object"
        }
      },
      "triggers": {
        "manual": {
          "type": "Request",
          "kind": "Button",
          "inputs": {
            "schema": {
              "type": "object",
              "properties": {
                "date": {
                  "title": "ServicePeriodStart",
                  "type": "string",
                  "format": "date",
                  "x-ms-dynamically-added": true,
                  "description": "Start date for service period",
                  "x-ms-content-hint": "DATE"
                },
                "number_1": {
                  "title": "InvoiceGroup",
                  "type": "number",
                  "x-ms-dynamically-added": true,
                  "description": "Target invoice group",
                  "x-ms-content-hint": "NUMBER"
                },
                "text": {
                  "title": "SiteNumber",
                  "type": "string",
                  "x-ms-dynamically-added": true,
                  "description": "Customer Site number (i.e. \"0452\")",
                  "x-ms-content-hint": "TEXT"
                },
                "date_1": {
                  "title": "ServiceEndDate",
                  "type": "string",
                  "format": "date",
                  "x-ms-dynamically-added": true,
                  "description": "End date for service period",
                  "x-ms-content-hint": "DATE"
                },
                "text_2": {
                  "description": "Please enter contract types",
                  "title": "ContractType",
                  "type": "string",
                  "x-ms-content-hint": "TEXT",
                  "x-ms-dynamically-added": true
                },
                "text_3": {
                  "description": "Please enter management agreement object",
                  "title": "ManagementAgreementObject",
                  "type": "string",
                  "x-ms-content-hint": "TEXT",
                  "x-ms-dynamically-added": true
                },
                "text_4": {
                  "description": "Please enter line items",
                  "title": "LineItems",
                  "type": "string",
                  "x-ms-content-hint": "TEXT",
                  "x-ms-dynamically-added": true
                },
                "number": {
                  "description": "Please enter Invoice Total",
                  "title": "InvoiceTotal",
                  "type": "number",
                  "x-ms-content-hint": "NUMBER",
                  "x-ms-dynamically-added": true
                },
                "date_2": {
                  "description": "Please enter Contract Start Date",
                  "format": "date",
                  "title": "ContractStartDate",
                  "type": "string",
                  "x-ms-content-hint": "DATE",
                  "x-ms-dynamically-added": true
                },
                "text_1": {
                  "description": "Please enter your input",
                  "title": "NonGLBillableExpenseObject",
                  "type": "string",
                  "x-ms-content-hint": "TEXT",
                  "x-ms-dynamically-added": true
                }
              },
              "required": [
                "date",
                "number_1",
                "text",
                "date_1",
                "text_2",
                "text_3",
                "text_4",
                "number",
                "date_2",
                "text_1"
              ]
            }
          },
          "metadata": {
            "operationMetadataId": "8320850f-96e4-451f-99e3-2ed5ca00cb3b"
          }
        }
      },
      "actions": {
        "Condition_-_are_parameters_empty": {
          "type": "If",
          "expression": {
            "or": [
              {
                "equals": [
                  "@triggerBody()['date']",
                  "@null"
                ]
              },
              {
                "equals": [
                  "@triggerBody()['text']",
                  "@null"
                ]
              },
              {
                "equals": [
                  "@triggerBody()['date_1']",
                  "@null"
                ]
              },
              {
                "equals": [
                  "@triggerBody()['number_1']",
                  "@null"
                ]
              },
              {
                "equals": [
                  "@triggerBody()?['text_3']",
                  "@null"
                ]
              },
              {
                "equals": [
                  "@triggerBody()?['text_4']",
                  "@null"
                ]
              }
            ]
          },
          "actions": {
            "Respond_Empty_To_Parent": {
              "type": "Response",
              "kind": "PowerApp",
              "inputs": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "invoicesubtotal": {
                      "title": "InvoiceSubTotal",
                      "x-ms-dynamically-added": true,
                      "type": "number"
                    },
                    "lineitems": {
                      "title": "LineItems",
                      "x-ms-dynamically-added": true,
                      "type": "string"
                    }
                  },
                  "additionalProperties": {}
                },
                "statusCode": 200,
                "body": {
                  "invoicesubtotal": "@variables('SubTotal')",
                  "lineitems": "@{variables('LineItems')}"
                }
              },
              "operationOptions": "Asynchronous",
              "metadata": {
                "operationMetadataId": "54fce644-4301-4783-9265-7e828967c21f"
              }
            },
            "Terminate": {
              "type": "Terminate",
              "inputs": {
                "runStatus": "Succeeded"
              },
              "runAfter": {
                "Respond_Empty_To_Parent": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "7c7352b5-4a00-46ce-a406-3f8a185c31e3"
              }
            }
          },
          "else": {
            "actions": {}
          },
          "runAfter": {
            "Initialize_LineItems_variable": [
              "Succeeded"
            ],
            "Initialize_SubTotal_variable": [
              "Succeeded"
            ],
            "Initialize_PreviousLimit_variable": [
              "Succeeded"
            ],
            "Initialize_ProfitDeductionAmount_variable": [
              "Succeeded"
            ],
            "Initialize_AmountDue_variable": [
              "Succeeded"
            ],
            "Initialize_Description_variable": [
              "Succeeded"
            ],
            "Initialize_profitShareCalculationDetails_variable_Array": [
              "Succeeded"
            ],
            "Initialize_TotalProfitStartToDate_variable": [
              "Succeeded"
            ],
            "Initialize_ValidationAmountOverThreshold_variable": [
              "Succeeded"
            ],
            "Initialize_NonBillableExpense_Amount_variable": [
              "Succeeded"
            ],
            "Initialize_variable": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "562702e7-2a18-40d4-9106-ca1001dadfd0"
          }
        },
        "Respond_To_Parent": {
          "type": "Response",
          "kind": "PowerApp",
          "inputs": {
            "schema": {
              "type": "object",
              "properties": {
                "invoicesubtotal": {
                  "title": "InvoiceSubTotal",
                  "x-ms-dynamically-added": true,
                  "type": "number"
                },
                "lineitems": {
                  "title": "LineItems",
                  "x-ms-dynamically-added": true,
                  "type": "string"
                }
              },
              "additionalProperties": {}
            },
            "statusCode": 200,
            "body": {
              "invoicesubtotal": "@float(formatNumber(add(variables('SubTotal'),variables('AmountDue')),'N2'))",
              "lineitems": "@{variables('LineItems')}"
            }
          },
          "runAfter": {
            "Scope_-_calculate_profit": [
              "Succeeded"
            ]
          },
          "operationOptions": "Asynchronous",
          "metadata": {
            "operationMetadataId": "54fce644-4301-4783-9265-7e828967c21f"
          }
        },
        "Condition_Check_If_Contract_Does_not_Contain_Management_Agreement": {
          "type": "If",
          "expression": {
            "and": [
              {
                "equals": [
                  "@contains(triggerBody()?['text_2'], '126840009')",
                  "@false"
                ]
              }
            ]
          },
          "actions": {
            "Terminate_2": {
              "type": "Terminate",
              "inputs": {
                "runStatus": "Succeeded"
              },
              "runAfter": {
                "Respond_Empty_To_Parent-copy_2": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "b3bd6280-8871-4a56-a916-3c36cc8e523c"
              }
            },
            "Respond_Empty_To_Parent-copy_2": {
              "type": "Response",
              "kind": "PowerApp",
              "inputs": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "invoicesubtotal": {
                      "title": "InvoiceSubTotal",
                      "x-ms-dynamically-added": true,
                      "type": "number"
                    },
                    "lineitems": {
                      "title": "LineItems",
                      "x-ms-dynamically-added": true,
                      "type": "string"
                    }
                  },
                  "additionalProperties": {}
                },
                "statusCode": 200,
                "body": {
                  "invoicesubtotal": "@variables('SubTotal')",
                  "lineitems": "@{variables('LineItems')}"
                }
              },
              "operationOptions": "Asynchronous",
              "metadata": {
                "operationMetadataId": "54fce644-4301-4783-9265-7e828967c21f"
              }
            }
          },
          "else": {
            "actions": {}
          },
          "runAfter": {
            "Condition_-_are_parameters_empty": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "96805da2-a442-417c-9556-70633b9cf328"
          }
        },
        "Initialize_LineItems_variable": {
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "LineItems",
                "type": "array",
                "value": "@outputs('Compose_LineItems')"
              }
            ]
          },
          "runAfter": {
            "Compose_LineItems": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "fcf742e8-6bd4-44c2-8c4d-0d1df0c51842"
          }
        },
        "Initialize_SubTotal_variable": {
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "SubTotal",
                "type": "float",
                "value": "@triggerBody()?['number']"
              }
            ]
          },
          "runAfter": {
            "Compose_LineItems": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "4bfb229e-eba7-492d-8f45-7a773054a4cb"
          }
        },
        "Scope_-_calculate_profit": {
          "type": "Scope",
          "actions": {
            "Get_Monthly_Revenue": {
              "type": "OpenApiConnection",
              "inputs": {
                "parameters": {
                  "server": "default",
                  "database": "default",
                  "table": "[dbo].[vwREVENUE_DAILY_DETAIL_INVOICE]",
                  "$apply": "filter(SITE eq '@{triggerBody()?['text']}' and year(DATE) eq @{formatDateTime(triggerBody()?['date'],'yyyy')} and month(DATE) eq @{formatDateTime(triggerBody()?['date'],'MM')}and DEPOSIT_FLAG ne 'V' and REVENUE_CATEGORY ne 'Per Man Hour')/aggregate(NETEXTERNALREVENUE with sum as TotalNetExternalRevenue)",
                  "$select": "TotalNetExternalRevenue"
                },
                "host": {
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_sql",
                  "operationId": "GetItems_V2",
                  "connectionName": "shared_sql-1"
                }
              },
              "metadata": {
                "operationMetadataId": "2ab6794f-6e2a-4dcb-adae-b2e24f1015e2"
              }
            },
            "Compose_Monthly_Net_External_Revenue": {
              "type": "Compose",
              "inputs": "@coalesce(first(outputs('Get_Monthly_Revenue')?['body/value'])?['TotalNetExternalRevenue'],0)",
              "runAfter": {
                "Get_Monthly_Revenue": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "96b2cd55-ca9a-4ea6-bd04-e9ef8f5e164c"
              }
            },
            "Filter_array_-_Profit_Deduction_Line_Items": {
              "type": "Query",
              "inputs": {
                "from": "@variables('LineItems')",
                "where": "@equals(item()?['metaData']?['isProfitDeduction'],true)"
              },
              "metadata": {
                "operationMetadataId": "ce156ba6-3b4d-4440-89f6-6cbad150883a"
              }
            },
            "Parse_JSON_-_Deserialize_Tier_Data": {
              "type": "ParseJson",
              "inputs": {
                "content": "@first(body('Parse_JSON_-_Management_Agreement_Object')).bs_profitsharetierdata",
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "sharePercentage": {
                        "type": "integer"
                      },
                      "amount": {
                        "type": [
                          "integer",
                          "null"
                        ]
                      }
                    }
                  }
                }
              },
              "metadata": {
                "operationMetadataId": "0c22baea-bc36-49d0-9e62-665e50234dcc"
              }
            },
            "For_each_tier": {
              "type": "Foreach",
              "foreach": "@outputs('Parse_JSON_-_Deserialize_Tier_Data')['body']",
              "actions": {
                "Parse_JSON_tier_data": {
                  "type": "ParseJson",
                  "inputs": {
                    "content": "@items('For_each_tier')",
                    "schema": {
                      "type": "object",
                      "properties": {
                        "sharePercentage": {
                          "type": "integer"
                        },
                        "amount": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "metadata": {
                    "operationMetadataId": "038d72ab-f9a6-41cb-9502-2140531b5f73"
                  }
                },
                "Compose_Current_Limit": {
                  "type": "Compose",
                  "inputs": "@body('Parse_JSON_tier_data')?['amount']",
                  "runAfter": {
                    "Parse_JSON_tier_data": [
                      "Succeeded"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "ececb48c-cbc3-4c31-884e-025e9070235e"
                  }
                },
                "Condition_-_is_previous_limit_greater_than_current_limit": {
                  "type": "If",
                  "expression": {
                    "and": [
                      {
                        "greater": [
                          "@variables('PreviousLimit')",
                          "@outputs('Compose_Current_Limit')"
                        ]
                      },
                      {
                        "not": {
                          "equals": [
                            "@outputs('Compose_Current_Limit')",
                            0
                          ]
                        }
                      }
                    ]
                  },
                  "actions": {},
                  "else": {
                    "actions": {
                      "Compose_Tier_Amount": {
                        "type": "Compose",
                        "inputs": "@if(\r\n    or(\r\n        equals(outputs('Compose_Current_Limit'), 0),\r\n        lessOrEquals(\r\n            outputs('Compose_-_Total_Profit'),\r\n            outputs('Compose_Current_Limit')\r\n        )\r\n    ),\r\n    sub(\r\n        outputs('Compose_-_Total_Profit'),\r\n        variables('PreviousLimit')\r\n    ),\r\n    sub(\r\n        outputs('Compose_Current_Limit'),\r\n        variables('PreviousLimit')\r\n    )\r\n)",
                        "metadata": {
                          "operationMetadataId": "c549de81-920f-40cd-8c59-d5c684e75619"
                        }
                      },
                      "Set_variable_PreviousLimit": {
                        "type": "SetVariable",
                        "inputs": {
                          "name": "PreviousLimit",
                          "value": "@outputs('Compose_Current_Limit')"
                        },
                        "runAfter": {
                          "Increment_AmountDue_variable": [
                            "Succeeded"
                          ]
                        },
                        "metadata": {
                          "operationMetadataId": "51ba067f-24fb-449a-983c-b893bf463a67"
                        }
                      },
                      "Compose_Amount_Due": {
                        "type": "Compose",
                        "inputs": "@if(\r\n    greater(\r\n        outputs('Compose_Tier_Amount'),\r\n        0\r\n    ),\r\n    mul(\r\n        outputs('Compose_Tier_Amount'),\r\n        div(\r\n            mul(outputs('Compose_Share_Percentage'),1.0),\r\n            100\r\n        )\r\n    ),\r\n    0\r\n)",
                        "runAfter": {
                          "Compose_Share_Percentage": [
                            "Succeeded"
                          ]
                        },
                        "metadata": {
                          "operationMetadataId": "b104a3fc-5f81-4537-889b-78110eb8c60d"
                        }
                      },
                      "Increment_AmountDue_variable": {
                        "type": "IncrementVariable",
                        "inputs": {
                          "name": "AmountDue",
                          "value": "@if(first(body('Parse_JSON_-_Management_Agreement_Object')).bs_profitshareenabled, outputs('Compose_Amount_Due'), 0)"
                        },
                        "runAfter": {
                          "Compose_Amount_Due": [
                            "Succeeded"
                          ]
                        },
                        "metadata": {
                          "operationMetadataId": "38483f9a-4a31-43c3-86fd-81d4d0fffb61"
                        }
                      },
                      "Compose_Share_Percentage": {
                        "type": "Compose",
                        "inputs": "@body('Parse_JSON_tier_data')?['sharePercentage']",
                        "runAfter": {
                          "Compose_Tier_Amount": [
                            "Succeeded"
                          ]
                        },
                        "metadata": {
                          "operationMetadataId": "1e8f41e2-c6a9-45c5-9b9b-8beeb4060b1e"
                        }
                      },
                      "Append_profit_calculation_to_Description_variable": {
                        "type": "AppendToStringVariable",
                        "inputs": {
                          "name": "Description",
                          "value": "Profit Share @{outputs('Compose_Share_Percentage')}%: @{concat(formatNumber(outputs('Compose_Amount_Due'),'C2','en-US'),decodeUriComponent('%0A'))}"
                        },
                        "runAfter": {
                          "Compose_Amount_Due": [
                            "Succeeded"
                          ]
                        },
                        "metadata": {
                          "operationMetadataId": "5786ba11-5102-4e97-98ab-f7c30611ce2c"
                        }
                      },
                      "Append_calculations_to_ProfitShareCalculationDetails_array": {
                        "type": "AppendToArrayVariable",
                        "inputs": {
                          "name": "ProfitShareCalculationDetails",
                          "value": {
                            "description": "Profit Share @{outputs('Compose_Share_Percentage')}%",
                            "amount": "@formatNumber(outputs('Compose_Amount_Due'),'C2','en-US')",
                            "isProfitCalculation": true
                          }
                        },
                        "runAfter": {
                          "Append_profit_calculation_to_Description_variable": [
                            "Succeeded"
                          ]
                        },
                        "metadata": {
                          "operationMetadataId": "d48d662f-6b7c-426d-ab6d-ae50dbcc3048"
                        }
                      },
                      "Compose_validation_revenue_charged_at_tier": {
                        "type": "Compose",
                        "inputs": "@if(\r\n    equals(outputs('Compose_Monthly_Profit'), 0), \r\n    0, \r\n    mul(\r\n        div(\r\n            variables('ValidationAmountOverThreshold'), \r\n            outputs('Compose_Monthly_Profit')\r\n        ), \r\n        outputs('Compose_Tier_Amount')\r\n    )\r\n)",
                        "runAfter": {
                          "Compose_Amount_Due": [
                            "Succeeded"
                          ]
                        },
                        "metadata": {
                          "operationMetadataId": "399d5dab-9bd6-4058-b34b-f60c5cabf8a1"
                        }
                      },
                      "Add_a_new_validation_by_percent_row": {
                        "type": "OpenApiConnection",
                        "inputs": {
                          "parameters": {
                            "entityName": "bs_validationbypercents",
                            "item/bs_amountoverthreshold": "@if(\r\n    greater(\r\n        outputs('Compose_Tier_Amount'),\r\n        0\r\n    ),\r\n    outputs('Compose_validation_revenue_charged_at_tier'),\r\n    0\r\n)",
                            "item/bs_month": "@formatDateTime(triggerBody()?['date'],'MM')",
                            "item/bs_percenttocharge": "@outputs('Compose_Share_Percentage')",
                            "item/bs_site": "@triggerBody()?['text']",
                            "item/bs_thresholdamount": "@first(body('Parse_JSON_-_Management_Agreement_Object'))?['bs_validationthresholdamount']",
                            "item/bs_thresholdtype": "@first(body('Parse_JSON_-_Management_Agreement_Object'))?['bs_validationthresholdtype@OData.Community.Display.V1.FormattedValue']",
                            "item/bs_totalduetotownepark": "@if(\r\n    greater(\r\n        outputs('Compose_Tier_Amount'),\r\n        0\r\n    ),\r\n    mul(\r\n        outputs('Compose_validation_revenue_charged_at_tier'),\r\n        div(\r\n            mul(outputs('Compose_Share_Percentage'),1.0),\r\n            100\r\n        )\r\n    ),\r\n    0\r\n)",
                            "item/bs_validationtype": "@first(body('Parse_JSON_-_Management_Agreement_Object'))?['bs_profitshareaccumulationtype@OData.Community.Display.V1.FormattedValue']",
                            "item/bs_year": "@formatDateTime(triggerBody()?['date'],'yyyy')"
                          },
                          "host": {
                            "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                            "operationId": "CreateRecord",
                            "connectionName": "shared_commondataserviceforapps-1"
                          }
                        },
                        "runAfter": {
                          "Compose_validation_revenue_charged_at_tier": [
                            "Succeeded"
                          ]
                        },
                        "metadata": {
                          "operationMetadataId": "8c727bb9-f94a-469a-978a-97dd03948940"
                        }
                      },
                      "Add_a_new_Profit_Share_By_Percent_row": {
                        "type": "OpenApiConnection",
                        "inputs": {
                          "parameters": {
                            "entityName": "bs_profitsharebypercentages",
                            "item/bs_month": "@formatDateTime(triggerBody()?['date'],'MM')",
                            "item/bs_ownerpercentdisplay": "@if(\r\n    greaterOrEquals(outputs('Compose_Share_Percentage'), 0), \r\n    formatNumber(\r\n        sub(100, outputs('Compose_Share_Percentage')), \r\n        '0.00'\r\n    ), \r\n    formatNumber(100, '0.00')\r\n)",
                            "item/bs_percenttocharge": "@outputs('Compose_Share_Percentage')",
                            "item/bs_profitamount": "@if(less(outputs('Compose_Tier_Amount'),0),0,outputs('Compose_Tier_Amount'))",
                            "item/bs_site": "@triggerBody()?['text']",
                            "item/bs_tierlimitamount": "@if(\r\n    equals(outputs('Compose_Current_Limit'), 0), \r\n    '∞', \r\n    formatNumber(\r\n       outputs('Compose_Current_Limit'), \r\n        '#,##0'\r\n    )\r\n)",
                            "item/bs_totalduetotownepark": "@outputs('Compose_Amount_Due')",
                            "item/bs_year": "@formatDateTime(triggerBody()?['date'],'yyyy')"
                          },
                          "host": {
                            "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                            "operationId": "CreateRecord",
                            "connectionName": "shared_commondataserviceforapps-1"
                          }
                        },
                        "runAfter": {
                          "Compose_Amount_Due": [
                            "Succeeded"
                          ]
                        },
                        "metadata": {
                          "operationMetadataId": "7bf9e385-65cb-4d9a-997d-d795b2db278b"
                        }
                      }
                    }
                  },
                  "runAfter": {
                    "Condition_-_is_previous_limit_less_than_profit_accumulation": [
                      "Succeeded"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "c02ca062-e5ab-43c1-8141-7b6b67bb6c2c"
                  }
                },
                "Condition_-_is_previous_limit_less_than_profit_accumulation": {
                  "type": "If",
                  "expression": {
                    "and": [
                      {
                        "less": [
                          "@variables('PreviousLimit')",
                          "@variables('TotalProfitStartToDate')"
                        ]
                      }
                    ]
                  },
                  "actions": {
                    "Set_variable_-_PreviousLimit_to_Profit_Accumulation_Start_to_Date": {
                      "type": "SetVariable",
                      "inputs": {
                        "name": "PreviousLimit",
                        "value": "@variables('TotalProfitStartToDate')"
                      },
                      "metadata": {
                        "operationMetadataId": "d39bbca2-24d2-44aa-a861-58e6bc0526b9"
                      }
                    }
                  },
                  "else": {
                    "actions": {}
                  },
                  "runAfter": {
                    "Compose_Current_Limit": [
                      "Succeeded"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "8dbcb986-b9c6-46c9-bd33-329f789ac4bf"
                  }
                }
              },
              "runAfter": {
                "Compose_-_Total_Profit": [
                  "Succeeded"
                ],
                "For_each_Validation_by_Percent_row": [
                  "Succeeded"
                ],
                "For_each_Profit_Share_By_Percentage_row": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "071f981f-29c3-4478-af67-21fad514f6fa"
              }
            },
            "Compose_Monthly_Profit": {
              "type": "Compose",
              "inputs": "@sub(sub(sub(outputs('Compose_Monthly_Net_External_Revenue'),variables('ProfitDeductionAmount')), variables('NonBillableExpenseAmount')),\r\nvariables('NonGLBillableExpenseDeductionAmount'))\r\n",
              "runAfter": {
                "For_each_non_billable_expense_line_item": [
                  "Succeeded"
                ],
                "For_each_NonGLBillableExpense": [
                  "Succeeded"
                ],
                "Scope_-_Remove_client_paid_expenses": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "5ae5391f-9f5c-4776-a1b4-3a698221b3f6"
              }
            },
            "For_each_profit_deduction_line_item": {
              "type": "Foreach",
              "foreach": "@outputs('Filter_array_-_Profit_Deduction_Line_Items')['body']",
              "actions": {
                "Append_deduction_to_Description_variable": {
                  "type": "AppendToStringVariable",
                  "inputs": {
                    "name": "Description",
                    "value": "@{items('For_each_profit_deduction_line_item')?['title']}: -@{concat(formatNumber(outputs('Compose_ProfitDeduction_Amount'), 'C2', 'en-US'),decodeUriComponent('%0A'))}"
                  },
                  "runAfter": {
                    "Compose_ProfitDeduction_Amount": [
                      "Succeeded"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "69a63aba-2916-4bef-a9a0-9bd59ba9471f"
                  }
                },
                "Increment_ProfitDeductionAmount_variable": {
                  "type": "IncrementVariable",
                  "inputs": {
                    "name": "ProfitDeductionAmount",
                    "value": "@outputs('Compose_ProfitDeduction_Amount')"
                  },
                  "runAfter": {
                    "Append_deductions_to_ProfitShareCalculationDetails_array": [
                      "Succeeded"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "25533944-8ce6-4a0a-92ce-5950653bd48f"
                  }
                },
                "Append_deductions_to_ProfitShareCalculationDetails_array": {
                  "type": "AppendToArrayVariable",
                  "inputs": {
                    "name": "ProfitShareCalculationDetails",
                    "value": {
                      "description": "@{items('For_each_profit_deduction_line_item')?['title']}",
                      "amount": "@formatNumber(outputs('Compose_ProfitDeduction_Amount'), 'C2', 'en-US')",
                      "isProfitDeduction": true
                    }
                  },
                  "runAfter": {
                    "Append_deduction_to_Description_variable": [
                      "Succeeded"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "b1464cf7-4014-4b72-bbe3-e036c8680033"
                  }
                },
                "Add_a_new_Management_Agreement_Line_Item_row": {
                  "type": "OpenApiConnection",
                  "inputs": {
                    "parameters": {
                      "entityName": "bs_managementagreementlineitems",
                      "item/bs_mainaccount": "@items('For_each_profit_deduction_line_item')?['code']",
                      "item/bs_month": "@formatDateTime(triggerBody()?['date'],'MM')",
                      "item/bs_site": "@triggerBody()?['text']",
                      "item/bs_title": "@items('For_each_profit_deduction_line_item')?['title']",
                      "item/bs_total": "@items('For_each_profit_deduction_line_item')?['amount']",
                      "item/bs_type": "@items('For_each_profit_deduction_line_item')?['metaData']?['lineItemType']",
                      "item/bs_year": "@formatDateTime(triggerBody()?['date'],'yyyy')"
                    },
                    "host": {
                      "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                      "operationId": "CreateRecord",
                      "connectionName": "shared_commondataserviceforapps-1"
                    }
                  },
                  "runAfter": {
                    "Compose_ProfitDeduction_Amount": [
                      "Succeeded"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "5719c075-4a66-40a2-b8cc-571b96d3faa8"
                  }
                },
                "Compose_ProfitDeduction_Amount": {
                  "type": "Compose",
                  "inputs": "@if(\r\n    and(contains(items('For_each_profit_deduction_line_item'), 'metaData'), \r\n        contains(items('For_each_profit_deduction_line_item')['metaData'], 'isAdhoc')),\r\n    if(\r\n        coalesce(items('For_each_profit_deduction_line_item')['metaData']['isAdhoc'], false),\r\n        mul(items('For_each_profit_deduction_line_item')['amount'], -1),\r\n        items('For_each_profit_deduction_line_item')['amount']\r\n    ),\r\n    items('For_each_profit_deduction_line_item')['amount']\r\n)",
                  "metadata": {
                    "operationMetadataId": "d97aa3f1-ff61-46d2-bb21-b307b91563f0"
                  }
                }
              },
              "runAfter": {
                "Parse_JSON_-_Deserialize_Tier_Data": [
                  "Succeeded"
                ],
                "Filter_array_-_Profit_Deduction_Line_Items": [
                  "Succeeded"
                ],
                "Condition_-_is_Validations_enabled": [
                  "Succeeded"
                ],
                "For_each_Management_Agreement_Line_Item_row": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "f13f3524-7bf4-4dbf-8956-09e581be8f3f"
              }
            },
            "Append_Monthly_Revenue_to_Description_Variable": {
              "type": "AppendToStringVariable",
              "inputs": {
                "name": "Description",
                "value": "Monthly Revenue: @{concat(formatNumber(outputs('Compose_Monthly_Net_External_Revenue'), 'C2','en-US'),decodeUriComponent('%0A'))}"
              },
              "runAfter": {
                "Compose_Monthly_Net_External_Revenue": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "6f3dce60-8779-4769-a62f-2da3df003616"
              }
            },
            "Append_additions_to_ProfitShareCalculationDetails_array": {
              "type": "AppendToArrayVariable",
              "inputs": {
                "name": "ProfitShareCalculationDetails",
                "value": {
                  "description": "Monthly Revenue",
                  "amount": "@formatNumber(outputs('Compose_Monthly_Net_External_Revenue'), 'C2','en-US')",
                  "isProfitAddition": true
                }
              },
              "runAfter": {
                "Append_Monthly_Revenue_to_Description_Variable": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "f0ba75f5-b856-497d-80e7-cbcffbe63411"
              }
            },
            "Condition_-_Is_Accumulation_Annual": {
              "type": "If",
              "expression": {
                "or": [
                  {
                    "equals": [
                      "@first(body('Parse_JSON_-_Management_Agreement_Object')).bs_profitshareaccumulationtype",
                      126840001
                    ]
                  },
                  {
                    "equals": [
                      "@first(body('Parse_JSON_-_Management_Agreement_Object')).bs_profitshareaccumulationtype",
                      126840002
                    ]
                  }
                ]
              },
              "actions": {
                "Compose_-Profit_Accumulation_Start_Date": {
                  "type": "Compose",
                  "inputs": "@if(\r\n    equals(first(body('Parse_JSON_-_Management_Agreement_Object')).bs_profitshareaccumulationtype, \r\n    126840001), \r\n    concat(\r\n        formatDateTime(utcNow(), 'yyyy'), \r\n        '-01-01'\r\n    ), \r\n    if(\r\n        greaterOrEquals(\r\n            formatDateTime(utcNow(), 'MMdd'), \r\n            formatDateTime(triggerBody()?['date_2'], 'MM-dd')\r\n        ),\r\n        concat(\r\n            formatDateTime(utcNow(), 'yyyy'), '-', \r\n            formatDateTime(triggerBody()?['date_2'], 'MM-dd')\r\n        ),\r\n        concat(\r\n            sub(\r\n                int(formatDateTime(utcNow(), 'yyyy')), \r\n                1\r\n            ), '-', \r\n            formatDateTime(triggerBody()?['date_2'], 'MM-dd')\r\n        )\r\n    )\r\n)",
                  "metadata": {
                    "operationMetadataId": "47e6bf6d-c7d3-43aa-bd6d-d762ea30f229"
                  }
                },
                "List_Invoice_rows": {
                  "type": "OpenApiConnection",
                  "inputs": {
                    "parameters": {
                      "entityName": "bs_invoices",
                      "$filter": "bs_invoicedate gt @{outputs('Compose_-Profit_Accumulation_Start_Date')} and startswith(bs_invoicenumber,'@{triggerBody()?['text']}-')"
                    },
                    "host": {
                      "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                      "operationId": "ListRecords",
                      "connectionName": "shared_commondataserviceforapps-1"
                    }
                  },
                  "runAfter": {
                    "Compose_-Profit_Accumulation_Start_Date": [
                      "Succeeded"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "9363749b-66ed-4198-b3e5-79c385599d16"
                  }
                },
                "Parse_JSON_-_Invoice_Rows": {
                  "type": "ParseJson",
                  "inputs": {
                    "content": "@outputs('List_Invoice_rows')?['body/value']",
                    "schema": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "bs_invoicedata": {
                            "type": "string"
                          },
                          "bs_invoiceid": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "runAfter": {
                    "List_Invoice_rows": [
                      "Succeeded"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "84af63aa-c709-4f07-94d0-b72a3eda8760"
                  }
                },
                "For_each_Invoice_Row": {
                  "type": "Foreach",
                  "foreach": "@outputs('Parse_JSON_-_Invoice_Rows')['body']",
                  "actions": {
                    "Compose_Invoice_Data": {
                      "type": "Compose",
                      "inputs": "@json(item()?['bs_invoicedata'])",
                      "metadata": {
                        "operationMetadataId": "ea80596c-040c-4167-a04a-7f577d5a49f5"
                      }
                    },
                    "Filter_array_get_profit_line_items": {
                      "type": "Query",
                      "inputs": {
                        "from": "@outputs('Compose_Invoice_Data')",
                        "where": "@equals(item()?['metaData']?['isProfitShare'],true)"
                      },
                      "runAfter": {
                        "Compose_Invoice_Data": [
                          "Succeeded"
                        ]
                      },
                      "metadata": {
                        "operationMetadataId": "5e6e9e50-c2b8-40ce-9566-1410c3a4f0c5"
                      }
                    },
                    "Select_profit_amount": {
                      "type": "Select",
                      "inputs": {
                        "from": "@body('Filter_array_get_profit_line_items')",
                        "select": "@item()?['metaData']?['monthlyProfit']"
                      },
                      "runAfter": {
                        "Filter_array_get_profit_line_items": [
                          "Succeeded"
                        ]
                      },
                      "metadata": {
                        "operationMetadataId": "fdf087a7-89b5-4ff9-97e3-e32992055012"
                      }
                    },
                    "Increment_TotalProfitStartToDate_variable": {
                      "type": "IncrementVariable",
                      "inputs": {
                        "name": "TotalProfitStartToDate",
                        "value": "@coalesce(first(body('Select_profit_amount')),0)"
                      },
                      "runAfter": {
                        "Compose_Profit_to_Date": [
                          "Succeeded"
                        ]
                      },
                      "metadata": {
                        "operationMetadataId": "24fadd68-dd5c-4599-b058-26e247b7683b"
                      }
                    },
                    "Compose_Profit_to_Date": {
                      "type": "Compose",
                      "inputs": "@float(coalesce(first(body('Select_profit_amount')),0))",
                      "runAfter": {
                        "Select_profit_amount": [
                          "Succeeded"
                        ]
                      },
                      "metadata": {
                        "operationMetadataId": "ace34abf-d308-4358-9a1e-f6fa36416e02"
                      }
                    }
                  },
                  "runAfter": {
                    "Parse_JSON_-_Invoice_Rows": [
                      "Succeeded"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "f6004be3-4ecc-484c-943c-996f64a00c41"
                  }
                }
              },
              "else": {
                "actions": {}
              },
              "runAfter": {
                "For_each_non_billable_expense_line_item": [
                  "Succeeded"
                ],
                "Scope_-_Remove_client_paid_expenses": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "39dd8a98-da96-45e8-b4e1-1e05e96ae313"
              }
            },
            "Compose_-_Total_Profit": {
              "type": "Compose",
              "inputs": "@add(outputs('Compose_Monthly_Profit'),variables('TotalProfitStartToDate'))",
              "runAfter": {
                "Compose_Monthly_Profit": [
                  "Succeeded"
                ],
                "Condition_-_Is_Accumulation_Annual": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "0976c6e5-a0da-4a2f-9681-c0cc69f8f506"
              }
            },
            "Condition_-_is_Validations_enabled": {
              "type": "If",
              "expression": {
                "and": [
                  {
                    "equals": [
                      "@first(body('Parse_JSON_-_Management_Agreement_Object')).bs_validationthresholdenabled",
                      "@true"
                    ]
                  }
                ]
              },
              "actions": {
                "Scope_-_Value_of_Validations_Over_Threshold": {
                  "type": "Scope",
                  "actions": {
                    "Get_Monthly_Validation_Revenue": {
                      "type": "OpenApiConnection",
                      "inputs": {
                        "parameters": {
                          "server": "default",
                          "database": "default",
                          "table": "[dbo].[vwREVENUE_DAILY_DETAIL_INVOICE]",
                          "$apply": "filter(SITE eq '@{triggerBody()?['text']}' and year(DATE) eq @{formatDateTime(triggerBody()?['date'],'yyyy')} and month(DATE) eq @{formatDateTime(triggerBody()?['date'],'MM')} and DEPOSIT_FLAG eq 'V' and REVENUE_CATEGORY ne 'Per Man Hour')/aggregate(BILLABLE_NET_VALIDATION with sum as ValidationRevenue)",
                          "$select": "ValidationRevenue"
                        },
                        "host": {
                          "apiId": "/providers/Microsoft.PowerApps/apis/shared_sql",
                          "operationId": "GetItems_V2",
                          "connectionName": "shared_sql-1"
                        }
                      },
                      "metadata": {
                        "operationMetadataId": "ed235dcc-703b-4520-b126-0a95ae207c15"
                      }
                    },
                    "Compose_Monthly_Validation_Revenue": {
                      "type": "Compose",
                      "inputs": "@coalesce(first(outputs('Get_Monthly_Validation_Revenue')?['body/value'])?['ValidationRevenue'],0)",
                      "runAfter": {
                        "Get_Monthly_Validation_Revenue": [
                          "Succeeded"
                        ]
                      },
                      "metadata": {
                        "operationMetadataId": "38f01757-672d-4f8b-bcf9-bdc206391ccd"
                      }
                    },
                    "Switch_-_Validation_Type": {
                      "type": "Switch",
                      "expression": "@first(body('Parse_JSON_-_Management_Agreement_Object'))?['bs_validationthresholdtype']",
                      "default": {
                        "actions": {}
                      },
                      "cases": {
                        "Case_-_Vehicle_Count": {
                          "actions": {
                            "Set_variable_ValidationAmountOverThreshold_by_Count": {
                              "type": "SetVariable",
                              "inputs": {
                                "name": "ValidationAmountOverThreshold",
                                "value": "@outputs('Compose_Monthly_Validation_Revenue')"
                              },
                              "metadata": {
                                "operationMetadataId": "5bd6e180-e4b1-45c5-be11-ee796b02a45b"
                              }
                            }
                          },
                          "case": 126840000
                        },
                        "Case_-_Revenue_Percentage": {
                          "actions": {
                            "Compose_Validation_Threshold_Percentage": {
                              "type": "Compose",
                              "inputs": "@mul(\r\n    float(outputs('Compose_Monthly_Net_External_Revenue')),\r\n    div(\r\n        float(\r\n            first(\r\n                body('Parse_JSON_-_Management_Agreement_Object')\r\n            )?['bs_validationthresholdamount']\r\n        ),\r\n        100\r\n    )\r\n)",
                              "metadata": {
                                "operationMetadataId": "279f4d68-5e0c-42c7-8c0b-d63ab8732b6f"
                              }
                            },
                            "Set_variable_ValidationAmountOverThreshold_by_Percentage": {
                              "type": "SetVariable",
                              "inputs": {
                                "name": "ValidationAmountOverThreshold",
                                "value": "@    if(\r\n        greater(\r\n            outputs('Compose_Monthly_Validation_Revenue'),\r\n            outputs('Compose_Validation_Threshold_Percentage')\r\n        ),\r\n        sub(\r\n            outputs('Compose_Monthly_Validation_Revenue'),\r\n            outputs('Compose_Validation_Threshold_Percentage')\r\n        ),\r\n        0\r\n    )"
                              },
                              "runAfter": {
                                "Compose_Validation_Threshold_Percentage": [
                                  "Succeeded"
                                ]
                              },
                              "metadata": {
                                "operationMetadataId": "0f5e6a3c-b90d-4254-afb5-5163d17aa801"
                              }
                            }
                          },
                          "case": 126840001
                        },
                        "Case_-_Validation_Amount": {
                          "actions": {
                            "Set_variable_ValidationAmountOverThreshold_by_Amount": {
                              "type": "SetVariable",
                              "inputs": {
                                "name": "ValidationAmountOverThreshold",
                                "value": "@    if(\r\n        greater(\r\n            outputs('Compose_Monthly_Validation_Revenue'),\r\n            first(body('Parse_JSON_-_Management_Agreement_Object'))?['bs_validationthresholdamount']\r\n        ),\r\n        sub(\r\n            outputs('Compose_Monthly_Validation_Revenue'),\r\n            first(body('Parse_JSON_-_Management_Agreement_Object'))?['bs_validationthresholdamount']\r\n        ),\r\n        0\r\n    )\r\n"
                              },
                              "metadata": {
                                "operationMetadataId": "8d6a1210-c222-41b1-9d6a-4a4e281305cb"
                              }
                            }
                          },
                          "case": 126840002
                        }
                      },
                      "runAfter": {
                        "Compose_Monthly_Validation_Revenue": [
                          "Succeeded"
                        ]
                      },
                      "metadata": {
                        "operationMetadataId": "848f638a-00f1-4c8e-80ae-bb3566855315"
                      }
                    },
                    "Decrement_ProfitDeductionAmount_variable_Validation_Revenue_Amount": {
                      "type": "DecrementVariable",
                      "inputs": {
                        "name": "ProfitDeductionAmount",
                        "value": "@variables('ValidationAmountOverThreshold')"
                      },
                      "runAfter": {
                        "Switch_-_Validation_Type": [
                          "Succeeded"
                        ]
                      },
                      "metadata": {
                        "operationMetadataId": "5806ac1d-6c8c-4f0e-933f-8df56a44a083"
                      }
                    },
                    "Append_Validation_Revenue_Amount_to_Description_Variable": {
                      "type": "AppendToStringVariable",
                      "inputs": {
                        "name": "Description",
                        "value": "Value of Validations Over Threshold: @{concat(formatNumber(variables('ValidationAmountOverThreshold'),\r\n    'C2',\r\n    'en-US'\r\n),decodeUriComponent('%0A'))}"
                      },
                      "runAfter": {
                        "Decrement_ProfitDeductionAmount_variable_Validation_Revenue_Amount": [
                          "Succeeded"
                        ]
                      },
                      "metadata": {
                        "operationMetadataId": "1a2797b5-12b5-49a4-bce5-1579c89c0f8f"
                      }
                    },
                    "Append_Validation_Revenue_Amount_to_ProfitShareCalculationDetails_array": {
                      "type": "AppendToArrayVariable",
                      "inputs": {
                        "name": "ProfitShareCalculationDetails",
                        "value": {
                          "description": "Value of Validations Over Threshold",
                          "amount": "@formatNumber(variables('ValidationAmountOverThreshold'),\r\n    'C2',\r\n    'en-US'\r\n)",
                          "isProfitDeduction": true
                        }
                      },
                      "runAfter": {
                        "Append_Validation_Revenue_Amount_to_Description_Variable": [
                          "Succeeded"
                        ]
                      },
                      "metadata": {
                        "operationMetadataId": "b3bad953-9467-4c82-918f-cd68a9be9a32"
                      }
                    }
                  },
                  "metadata": {
                    "operationMetadataId": "b1f09727-1959-4b47-a062-3576ba94b646"
                  }
                }
              },
              "else": {
                "actions": {}
              },
              "runAfter": {
                "Append_additions_to_ProfitShareCalculationDetails_array": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "0d5ec62b-09ca-4d22-94dd-297ade1da0c2"
              }
            },
            "Compose_Line_Item_Object": {
              "type": "Compose",
              "inputs": {
                "title": "Towne Park Profit Share",
                "amount": "@variables('AmountDue')",
                "code": "4791",
                "description": "@{variables('Description')}",
                "metaData": {
                  "lineItemType": "profitShare",
                  "isProfitShare": true,
                  "profitShareCalculationDetails": "@{variables('ProfitShareCalculationDetails')}",
                  "monthlyProfit": "@outputs('Compose_Monthly_Profit')"
                }
              },
              "runAfter": {
                "For_each_tier": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "198f8392-f479-4b68-aff7-edb9988273a3"
              }
            },
            "List_Validation_by_Percent_rows": {
              "type": "OpenApiConnection",
              "inputs": {
                "parameters": {
                  "entityName": "bs_validationbypercents",
                  "$select": "bs_validationbypercentid",
                  "$filter": "bs_site eq '@{triggerBody()?['text']}' and bs_month eq '@{formatDateTime(triggerBody()?['date'],'MM')}' and bs_year eq '@{formatDateTime(triggerBody()?['date'],'yyyy')}'"
                },
                "host": {
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                  "operationId": "ListRecords",
                  "connectionName": "shared_commondataserviceforapps-1"
                }
              },
              "metadata": {
                "operationMetadataId": "f73d3696-44e1-4ceb-92d8-cfcd17a37c77"
              }
            },
            "For_each_Validation_by_Percent_row": {
              "type": "Foreach",
              "foreach": "@outputs('List_Validation_by_Percent_rows')?['body/value']",
              "actions": {
                "Delete_a_Validation_by_Percent_row": {
                  "type": "OpenApiConnection",
                  "inputs": {
                    "parameters": {
                      "entityName": "bs_validationbypercents",
                      "recordId": "@item()?['bs_validationbypercentid']"
                    },
                    "host": {
                      "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                      "operationId": "DeleteRecord",
                      "connectionName": "shared_commondataserviceforapps-1"
                    }
                  },
                  "metadata": {
                    "operationMetadataId": "e450f50e-910f-41ea-8e2d-419934f3599d"
                  }
                }
              },
              "runAfter": {
                "List_Validation_by_Percent_rows": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "5a05cd91-0b67-4afa-b275-9baac57fcc64"
              }
            },
            "List_Profit_Share_By_Percentage_rows": {
              "type": "OpenApiConnection",
              "inputs": {
                "parameters": {
                  "entityName": "bs_profitsharebypercentages",
                  "$select": "bs_profitsharebypercentageid",
                  "$filter": "bs_site eq '@{triggerBody()?['text']}' and bs_month eq '@{formatDateTime(triggerBody()?['date'],'MM')}' and bs_year eq '@{formatDateTime(triggerBody()?['date'],'yyyy')}'"
                },
                "host": {
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                  "operationId": "ListRecords",
                  "connectionName": "shared_commondataserviceforapps-1"
                }
              },
              "metadata": {
                "operationMetadataId": "b46555ea-3eb1-4671-b7a6-af05ea0f7c09"
              }
            },
            "List_Management_Agreement_Line_Item_rows": {
              "type": "OpenApiConnection",
              "inputs": {
                "parameters": {
                  "entityName": "bs_managementagreementlineitems",
                  "$select": "bs_managementagreementlineitemid",
                  "$filter": "bs_site eq '@{triggerBody()?['text']}' and bs_month eq '@{formatDateTime(triggerBody()?['date'],'MM')}' and bs_year eq '@{formatDateTime(triggerBody()?['date'],'yyyy')}'"
                },
                "host": {
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                  "operationId": "ListRecords",
                  "connectionName": "shared_commondataserviceforapps-1"
                }
              },
              "metadata": {
                "operationMetadataId": "d4fb55bb-fafe-4f6b-96e3-df65cf4b9fc4"
              }
            },
            "For_each_Profit_Share_By_Percentage_row": {
              "type": "Foreach",
              "foreach": "@outputs('List_Profit_Share_By_Percentage_rows')?['body/value']",
              "actions": {
                "Delete_a_Profit_Share_By_Percentage_row": {
                  "type": "OpenApiConnection",
                  "inputs": {
                    "parameters": {
                      "entityName": "bs_profitsharebypercentages",
                      "recordId": "@items('For_each_Profit_Share_By_Percentage_row')?['bs_profitsharebypercentageid']"
                    },
                    "host": {
                      "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                      "operationId": "DeleteRecord",
                      "connectionName": "shared_commondataserviceforapps-1"
                    }
                  },
                  "metadata": {
                    "operationMetadataId": "be681516-979c-4b16-907a-73dc4b8754b2"
                  }
                }
              },
              "runAfter": {
                "List_Profit_Share_By_Percentage_rows": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "be1b8f18-7dae-4c3b-bace-52ba01b7d2b8"
              }
            },
            "For_each_Management_Agreement_Line_Item_row": {
              "type": "Foreach",
              "foreach": "@outputs('List_Management_Agreement_Line_Item_rows')?['body/value']",
              "actions": {
                "Delete_a_Management_Agreement_Line_Item_row": {
                  "type": "OpenApiConnection",
                  "inputs": {
                    "parameters": {
                      "entityName": "bs_managementagreementlineitems",
                      "recordId": "@items('For_each_Management_Agreement_Line_Item_row')?['bs_managementagreementlineitemid']"
                    },
                    "host": {
                      "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                      "operationId": "DeleteRecord",
                      "connectionName": "shared_commondataserviceforapps-1"
                    }
                  },
                  "metadata": {
                    "operationMetadataId": "5147fd83-6751-438e-abb3-f865e796aa4f"
                  }
                }
              },
              "runAfter": {
                "List_Management_Agreement_Line_Item_rows": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "fc113b96-1c48-4d03-b319-889e7ed57fe5"
              }
            },
            "Filter_array_-_AdHoc_Line_Items": {
              "type": "Query",
              "inputs": {
                "from": "@variables('LineItems')",
                "where": "@equals(item()?['metaData']?['isProfitDeduction'],true)"
              },
              "metadata": {
                "operationMetadataId": "ce156ba6-3b4d-4440-89f6-6cbad150883a"
              }
            },
            "Filter_array_-_Non_Billable_Expense_Line_Items": {
              "type": "Query",
              "inputs": {
                "from": "@variables('LineItems')",
                "where": "@equals(item()?['metaData']?['isNonBillableExpense'],true)"
              },
              "metadata": {
                "operationMetadataId": "3dc7bba9-3cba-40d2-a2bc-4bdea83e6fc8"
              }
            },
            "For_each_non_billable_expense_line_item": {
              "type": "Foreach",
              "foreach": "@body('Filter_array_-_Non_Billable_Expense_Line_Items')",
              "actions": {
                "Compose_Non_Billable_Expense_amount": {
                  "type": "Compose",
                  "inputs": "@if(\r\n    and(contains(items('For_each_non_billable_expense_line_item'), 'metaData'), \r\n        contains(items('For_each_non_billable_expense_line_item')['metaData'], 'isAdhoc')), \r\n    if(\r\n        coalesce(items('For_each_non_billable_expense_line_item')['metaData']['isAdhoc'], false), \r\n        mul(items('For_each_non_billable_expense_line_item')['amount'], -1), \r\n        items('For_each_non_billable_expense_line_item')['amount']\r\n    ), \r\n    items('For_each_non_billable_expense_line_item')['amount']\r\n)",
                  "metadata": {
                    "operationMetadataId": "0125d48b-1a12-492d-b84c-e0eb7b474a97"
                  }
                },
                "Append_non_billable_expense_to_Description_variable": {
                  "type": "AppendToStringVariable",
                  "inputs": {
                    "name": "Description",
                    "value": "@{items('For_each_non_billable_expense_line_item')?['title']}: -@{concat(formatNumber(outputs('Compose_Non_Billable_Expense_amount'), 'C2', 'en-US'),decodeUriComponent('%0A'))}"
                  },
                  "runAfter": {
                    "Compose_Non_Billable_Expense_amount": [
                      "Succeeded"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "bc03695a-04d7-4ee9-8fc8-1c5e45e268be"
                  }
                },
                "Add_a_new_Non_Billable_Expense_Line_Item_in_Management_Agreement_Line_Item_row": {
                  "type": "OpenApiConnection",
                  "inputs": {
                    "parameters": {
                      "entityName": "bs_managementagreementlineitems",
                      "item/bs_mainaccount": "@items('For_each_non_billable_expense_line_item')?['code']",
                      "item/bs_month": "@formatDateTime(triggerBody()?['date'],'MM')",
                      "item/bs_site": "@triggerBody()?['text']",
                      "item/bs_title": "@items('For_each_non_billable_expense_line_item')?['title']",
                      "item/bs_total": "@items('For_each_non_billable_expense_line_item')?['amount']",
                      "item/bs_type": "@items('For_each_non_billable_expense_line_item')?['metaData']?['lineItemType']",
                      "item/bs_year": "@formatDateTime(triggerBody()?['date'],'yyyy')"
                    },
                    "host": {
                      "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                      "operationId": "CreateRecord",
                      "connectionName": "shared_commondataserviceforapps-1"
                    }
                  },
                  "runAfter": {
                    "Compose_Non_Billable_Expense_amount": [
                      "Succeeded"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "4411e5a6-5b75-4342-8443-2f0c40e8a25c"
                  }
                },
                "Append_expense_to_ProfitShareCalculationDetails_array": {
                  "type": "AppendToArrayVariable",
                  "inputs": {
                    "name": "ProfitShareCalculationDetails",
                    "value": {
                      "description": "@{items('For_each_non_billable_expense_line_item')?['title']}",
                      "amount": "@formatNumber(outputs('Compose_Non_Billable_Expense_amount'), 'C2', 'en-US')"
                    }
                  },
                  "runAfter": {
                    "Append_non_billable_expense_to_Description_variable": [
                      "Succeeded"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "1d4581b6-3161-4190-b2f9-800e9d69590c"
                  }
                },
                "Increment_NonBillableExpenseAmount_variable": {
                  "type": "IncrementVariable",
                  "inputs": {
                    "name": "NonBillableExpenseAmount",
                    "value": "@outputs('Compose_Non_Billable_Expense_amount')"
                  },
                  "runAfter": {
                    "Append_expense_to_ProfitShareCalculationDetails_array": [
                      "Succeeded"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "370ef4ef-292a-481e-a3be-346765c1f6b4"
                  }
                }
              },
              "runAfter": {
                "Filter_array_-_Non_Billable_Expense_Line_Items": [
                  "Succeeded"
                ],
                "For_each_Management_Agreement_Line_Item_row": [
                  "Succeeded"
                ],
                "Parse_JSON_-_Deserialize_Tier_Data": [
                  "Succeeded"
                ],
                "Condition_-_is_Validations_enabled": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "e3f99811-bb0a-49fc-b7f0-d9a2ff955284"
              }
            },
            "Parse_json_NonGLBillableExpense": {
              "type": "Compose",
              "inputs": "@json(triggerBody()?['text_1'])"
            },
            "Filter_array_element_zero_amount": {
              "type": "Query",
              "inputs": {
                "from": "@outputs('Parse_json_NonGLBillableExpense')",
                "where": "@not(equals(item()?['amount'],0))"
              },
              "runAfter": {
                "Parse_json_NonGLBillableExpense": [
                  "Succeeded"
                ]
              }
            },
            "For_each_NonGLBillableExpense": {
              "type": "Foreach",
              "foreach": "@body('Filter_array_element_zero_amount')",
              "actions": {
                "compose_NonGLBillableExpense_Amount": {
                  "type": "Compose",
                  "inputs": "@items('For_each_NonGLBillableExpense')?['amount']"
                },
                "Append_to_NonGLBillableExpense_to_description_variable": {
                  "type": "AppendToStringVariable",
                  "inputs": {
                    "name": "Description",
                    "value": "@{items('For_each_NonGLBillableExpense')?['title']}: -@{concat(formatNumber(outputs('compose_NonGLBillableExpense_Amount'),\r\n'C2', 'en-US'),decodeUriComponent('%0A'))}"
                  },
                  "runAfter": {
                    "compose_NonGLBillableExpense_Amount": [
                      "Succeeded"
                    ]
                  }
                },
                "_Add_a_new_NonGLBillableExpenseAmount_Line_Item_row": {
                  "type": "OpenApiConnection",
                  "inputs": {
                    "parameters": {
                      "entityName": "bs_managementagreementlineitems",
                      "item/bs_mainaccount": "@items('For_each_NonGLBillableExpense')?['code']",
                      "item/bs_month": "@formatDateTime(triggerBody()?['date'],'MM')",
                      "item/bs_site": "@triggerBody()?['text']",
                      "item/bs_title": "@items('For_each_NonGLBillableExpense')?['title']",
                      "item/bs_total": "@items('For_each_NonGLBillableExpense')?['amount']",
                      "item/bs_type": "@items('For_each_NonGLBillableExpense')?['type']",
                      "item/bs_year": "@formatDateTime(triggerBody()?['date'],'yyyy')"
                    },
                    "host": {
                      "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                      "operationId": "CreateRecord",
                      "connectionName": "shared_commondataserviceforapps-1"
                    }
                  },
                  "runAfter": {
                    "compose_NonGLBillableExpense_Amount": [
                      "Succeeded"
                    ]
                  }
                },
                "Append_deductions_to_ProfitShareCalculationDetails_array_": {
                  "type": "AppendToArrayVariable",
                  "inputs": {
                    "name": "ProfitShareCalculationDetails",
                    "value": {
                      "description": "@{items('For_each_NonGLBillableExpense')?['title']}",
                      "amount": "@formatNumber(outputs('compose_NonGLBillableExpense_Amount'),\r\n'C2', 'en-US')"
                    }
                  },
                  "runAfter": {
                    "Append_to_NonGLBillableExpense_to_description_variable": [
                      "Succeeded"
                    ]
                  }
                },
                "Increment_NonGLBillableExpansceAmount_variable": {
                  "type": "IncrementVariable",
                  "inputs": {
                    "name": "NonGLBillableExpenseDeductionAmount",
                    "value": "@outputs('compose_NonGLBillableExpense_Amount')"
                  },
                  "runAfter": {
                    "Append_deductions_to_ProfitShareCalculationDetails_array_": [
                      "Succeeded"
                    ]
                  }
                }
              },
              "runAfter": {
                "Filter_array_element_zero_amount": [
                  "Succeeded"
                ],
                "For_each_Management_Agreement_Line_Item_row": [
                  "Succeeded"
                ],
                "Condition_-_is_Validations_enabled": [
                  "Succeeded"
                ]
              }
            },
            "Condition_-_is_profit_share_enabled": {
              "type": "If",
              "expression": {
                "and": [
                  {
                    "equals": [
                      "@first(body('Parse_JSON_-_Management_Agreement_Object')).bs_profitshareenabled",
                      "@true"
                    ]
                  }
                ]
              },
              "actions": {
                "Append_to_array_variable": {
                  "type": "AppendToArrayVariable",
                  "inputs": {
                    "name": "LineItems",
                    "value": "@outputs('Compose_Line_Item_Object')"
                  },
                  "metadata": {
                    "operationMetadataId": "3f9f827d-b078-4e61-ba1f-51e231d952d1"
                  }
                }
              },
              "else": {
                "actions": {}
              },
              "runAfter": {
                "Compose_Line_Item_Object": [
                  "Succeeded"
                ]
              }
            },
            "Scope_-_Remove_client_paid_expenses": {
              "type": "Scope",
              "actions": {
                "Filter_array_remove_Client_Paid_Expenses": {
                  "type": "Query",
                  "inputs": {
                    "from": "@variables('LineItems')",
                    "where": "@or(\r\n  not(first(body('Parse_JSON_-_Management_Agreement_Object')).bs_profitshareenabled),\r\n  not(and(\r\n    coalesce(item()?['metaData']?['isAdhoc'], false),\r\n    coalesce(item()?['metaData']?['isProfitDeduction'], false)\r\n  ))\r\n)"
                  },
                  "metadata": {
                    "operationMetadataId": "4bc6a0ab-c9ec-4820-a705-4e8749f8e612"
                  }
                },
                "Set_variable_LineItems_without_Client_Paid_Expenses": {
                  "type": "SetVariable",
                  "inputs": {
                    "name": "LineItems",
                    "value": "@body('Filter_array_remove_Client_Paid_Expenses')"
                  },
                  "runAfter": {
                    "Filter_array_remove_Client_Paid_Expenses": [
                      "Succeeded"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "7491bd16-fb80-4938-8ce2-ffb347149179"
                  }
                },
                "For_each_filtered_line_item": {
                  "type": "Foreach",
                  "foreach": "@outputs('Filter_array_remove_Client_Paid_Expenses')['body']",
                  "actions": {
                    "Increment_variable_-_SubTotal": {
                      "type": "IncrementVariable",
                      "inputs": {
                        "name": "SubTotal",
                        "value": "@items('For_each_filtered_line_item')?['amount']"
                      }
                    }
                  },
                  "runAfter": {
                    "Reset_variable_SubTotal": [
                      "SUCCEEDED"
                    ]
                  }
                },
                "Reset_variable_SubTotal": {
                  "type": "SetVariable",
                  "inputs": {
                    "name": "SubTotal",
                    "value": 0
                  },
                  "runAfter": {
                    "Filter_array_remove_Client_Paid_Expenses": [
                      "Succeeded"
                    ]
                  }
                }
              },
              "runAfter": {
                "For_each_profit_deduction_line_item": [
                  "Succeeded"
                ]
              }
            }
          },
          "runAfter": {
            "Condition_Management_Agreement_is_not_on_invoice": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "f7a0fb99-145a-4c6e-a9be-d08d3d106612"
          }
        },
        "Condition_Management_Agreement_is_not_on_invoice": {
          "type": "If",
          "expression": {
            "and": [
              {
                "not": {
                  "equals": [
                    "@first(body('Parse_JSON_-_Management_Agreement_Object')).bs_invoicegroup",
                    "@triggerBody()?['number_1']"
                  ]
                }
              }
            ]
          },
          "actions": {
            "Respond_Empty_To_Parent-copy_3": {
              "type": "Response",
              "kind": "PowerApp",
              "inputs": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "invoicesubtotal": {
                      "title": "InvoiceSubTotal",
                      "x-ms-dynamically-added": true,
                      "type": "number"
                    },
                    "lineitems": {
                      "title": "LineItems",
                      "x-ms-dynamically-added": true,
                      "type": "string"
                    }
                  },
                  "additionalProperties": {}
                },
                "statusCode": 200,
                "body": {
                  "invoicesubtotal": "@variables('SubTotal')",
                  "lineitems": "@{variables('LineItems')}"
                }
              },
              "operationOptions": "Asynchronous",
              "metadata": {
                "operationMetadataId": "54fce644-4301-4783-9265-7e828967c21f"
              }
            },
            "Terminate_3": {
              "type": "Terminate",
              "inputs": {
                "runStatus": "Succeeded"
              },
              "runAfter": {
                "Respond_Empty_To_Parent-copy_3": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "b3bd6280-8871-4a56-a916-3c36cc8e523c"
              }
            }
          },
          "else": {
            "actions": {}
          },
          "runAfter": {
            "Parse_JSON_-_Management_Agreement_Object": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "f1e1ca76-fdc5-4359-bd06-b0b84339f715"
          }
        },
        "Compose_LineItems": {
          "type": "Compose",
          "inputs": "@json(triggerBody()?['text_4'])",
          "runAfter": {},
          "metadata": {
            "operationMetadataId": "21eb669e-1ffb-4ef7-9d06-b2cd28c3e20b"
          }
        },
        "Parse_JSON_-_Management_Agreement_Object": {
          "type": "ParseJson",
          "inputs": {
            "content": "@triggerBody()?['text_3']",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "bs_invoicegroup@OData.Community.Display.V1.FormattedValue": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "bs_invoicegroup": {
                    "type": [
                      "integer",
                      "number",
                      "null"
                    ]
                  },
                  "bs_managementagreementtype@OData.Community.Display.V1.FormattedValue": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "bs_managementagreementtype": {
                    "type": [
                      "integer",
                      "number",
                      "null"
                    ]
                  },
                  "bs_fixedfeeamount@OData.Community.Display.V1.FormattedValue": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "bs_fixedfeeamount": {
                    "type": [
                      "integer",
                      "number",
                      "null"
                    ]
                  },
                  "bs_perlaborhourjobcode": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "bs_perlaborhourrate@OData.Community.Display.V1.FormattedValue": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "bs_perlaborhourrate": {
                    "type": [
                      "integer",
                      "number",
                      "null"
                    ]
                  },
                  "bs_perlaborhourovertimerate@OData.Community.Display.V1.FormattedValue": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "bs_perlaborhourovertimerate": {
                    "type": [
                      "integer",
                      "number",
                      "null"
                    ]
                  },
                  "bs_revenuepercentageamount@OData.Community.Display.V1.FormattedValue": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "bs_revenuepercentageamount": {
                    "type": [
                      "integer",
                      "number",
                      "null"
                    ]
                  },
                  "bs_claimstype": {
                    "type": [
                      "integer",
                      "number",
                      "null"
                    ]
                  },
                  "bs_claimslinetitle": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "bs_claimsenabled@OData.Community.Display.V1.FormattedValue": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "bs_claimsenabled": {
                    "type": [
                      "boolean",
                      "null"
                    ]
                  },
                  "bs_claimscapamount": {
                    "type": [
                      "integer",
                      "number",
                      "null"
                    ]
                  },
                  "bs_insuranceadditionalpercentage@OData.Community.Display.V1.FormattedValue": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "bs_insuranceadditionalpercentage": {
                    "type": [
                      "integer",
                      "number",
                      "null"
                    ]
                  },
                  "bs_insuranceenabled@OData.Community.Display.V1.FormattedValue": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "bs_insuranceenabled": {
                    "type": [
                      "boolean",
                      "null"
                    ]
                  },
                  "bs_insurancefixedfeeamount@OData.Community.Display.V1.FormattedValue": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "bs_insurancefixedfeeamount": {
                    "type": [
                      "integer",
                      "number",
                      "null"
                    ]
                  },
                  "bs_insurancelinetitle": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "bs_insurancetype@OData.Community.Display.V1.FormattedValue": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "bs_insurancetype": {
                    "type": [
                      "integer",
                      "number",
                      "null"
                    ]
                  },
                  "bs_validationthresholdamount": {
                    "type": [
                      "integer",
                      "number",
                      "null"
                    ]
                  },
                  "bs_validationthresholdenabled@OData.Community.Display.V1.FormattedValue": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "bs_validationthresholdenabled": {
                    "type": [
                      "boolean",
                      "null"
                    ]
                  },
                  "bs_validationthresholdtype": {
                    "type": [
                      "integer",
                      "number",
                      "null"
                    ]
                  },
                  "bs_profitshareaccumulationtype": {
                    "type": [
                      "integer",
                      "number",
                      "null"
                    ]
                  },
                  "bs_profitshareenabled@OData.Community.Display.V1.FormattedValue": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "bs_profitshareenabled": {
                    "type": [
                      "boolean",
                      "null"
                    ]
                  },
                  "bs_profitsharetierdata": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "bs_managementagreementid": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                }
              }
            }
          },
          "runAfter": {
            "Condition_Check_If_Contract_Does_not_Contain_Management_Agreement": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "539393c4-48e1-431d-b14b-f22395f61cad"
          }
        },
        "Initialize_PreviousLimit_variable": {
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "PreviousLimit",
                "type": "float",
                "value": 0
              }
            ]
          },
          "runAfter": {
            "Compose_LineItems": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "46647244-9dd6-40d2-aa45-2301e5ee9fda"
          }
        },
        "Initialize_ProfitDeductionAmount_variable": {
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "ProfitDeductionAmount",
                "type": "float",
                "value": 0
              }
            ]
          },
          "runAfter": {
            "Compose_LineItems": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "259082ae-8f82-427a-81f3-250a13fb7105"
          }
        },
        "Initialize_AmountDue_variable": {
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "AmountDue",
                "type": "float",
                "value": 0
              }
            ]
          },
          "runAfter": {
            "Compose_LineItems": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "12f8fdf7-f2ab-4dfa-98d3-d63948b33ae5"
          }
        },
        "Initialize_Description_variable": {
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "Description",
                "type": "string"
              }
            ]
          },
          "runAfter": {
            "Compose_LineItems": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "267bf7fa-e9c3-4c36-9cbf-7ba815c84f75"
          }
        },
        "Initialize_profitShareCalculationDetails_variable_Array": {
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "ProfitShareCalculationDetails",
                "type": "array",
                "value": []
              }
            ]
          },
          "runAfter": {
            "Compose_LineItems": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "b6b501a0-5c0f-4acc-bf8c-8295c106f1a8"
          }
        },
        "Initialize_TotalProfitStartToDate_variable": {
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "TotalProfitStartToDate",
                "type": "float",
                "value": 0
              }
            ]
          },
          "runAfter": {
            "Compose_LineItems": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "fc730f08-8a9f-445e-bf62-eea0eab04186"
          }
        },
        "Initialize_ValidationAmountOverThreshold_variable": {
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "ValidationAmountOverThreshold",
                "type": "float",
                "value": 0
              }
            ]
          },
          "runAfter": {
            "Compose_LineItems": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "f70fd16d-21bb-4900-b47c-d996a6cdd828"
          }
        },
        "Initialize_NonBillableExpense_Amount_variable": {
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "NonBillableExpenseAmount",
                "type": "float",
                "value": 0
              }
            ]
          },
          "runAfter": {
            "Compose_LineItems": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "6ab0c6fb-ce86-4bc5-a631-cf13e0e5def8"
          }
        },
        "Initialize_variable": {
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "NonGLBillableExpenseDeductionAmount",
                "type": "float",
                "value": 0
              }
            ]
          },
          "runAfter": {
            "Compose_LineItems": [
              "Succeeded"
            ]
          }
        }
      }
    },
    "templateName": null
  },
  "schemaVersion": "1.0.0.0"
}