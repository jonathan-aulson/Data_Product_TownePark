{
  "properties": {
    "connectionReferences": {
      "shared_sql": {
        "runtimeSource": "embedded",
        "connection": {
          "connectionReferenceLogicalName": "bs_TowneParkEDW"
        },
        "api": {
          "name": "shared_sql"
        }
      }
    },
    "definition": {
      "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
      "contentVersion": "1.0.0.0",
      "parameters": {
        "$authentication": {
          "defaultValue": {},
          "type": "SecureObject"
        },
        "$connections": {
          "defaultValue": {},
          "type": "Object"
        }
      },
      "triggers": {
        "manual": {
          "metadata": {
            "operationMetadataId": "8320850f-96e4-451f-99e3-2ed5ca00cb3b"
          },
          "type": "Request",
          "kind": "Button",
          "inputs": {
            "schema": {
              "type": "object",
              "properties": {
                "date": {
                  "title": "ServicePeriodStart",
                  "type": "string",
                  "format": "date",
                  "x-ms-dynamically-added": true,
                  "description": "Start date for service period",
                  "x-ms-content-hint": "DATE"
                },
                "text": {
                  "title": "SiteNumber",
                  "type": "string",
                  "x-ms-dynamically-added": true,
                  "description": "Customer Site number (i.e. \"0452\")",
                  "x-ms-content-hint": "TEXT"
                },
                "date_1": {
                  "title": "ServiceEndDate",
                  "type": "string",
                  "format": "date",
                  "x-ms-dynamically-added": true,
                  "description": "End date for service period",
                  "x-ms-content-hint": "DATE"
                },
                "text_1": {
                  "description": "Please enter invoice line items",
                  "title": "InvoiceLineItems",
                  "type": "string",
                  "x-ms-content-hint": "TEXT",
                  "x-ms-dynamically-added": true
                }
              },
              "required": [
                "date",
                "text",
                "date_1",
                "text_1"
              ]
            }
          }
        }
      },
      "actions": {
        "Condition_-_are_parameters_empty": {
          "actions": {
            "Terminate": {
              "runAfter": {
                "Respond_to_a_Power_App_or_flow": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "7c7352b5-4a00-46ce-a406-3f8a185c31e3"
              },
              "type": "Terminate",
              "inputs": {
                "runStatus": "Succeeded"
              }
            },
            "Respond_to_a_Power_App_or_flow": {
              "metadata": {
                "operationMetadataId": "a0c7e071-1102-4444-bada-3b3f2397a4f6"
              },
              "type": "Response",
              "kind": "PowerApp",
              "inputs": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "forecast": {
                      "title": "Forecast",
                      "x-ms-dynamically-added": true,
                      "type": "string"
                    }
                  },
                  "additionalProperties": {}
                },
                "statusCode": 200,
                "body": {
                  "forecast": "@{outputs('Compose_Default_Forecast')}"
                }
              }
            }
          },
          "runAfter": {
            "Compose_Default_Forecast": [
              "Succeeded"
            ],
            "Initialize_variable_-_InvoicedRevenue": [
              "Succeeded"
            ],
            "Initialize_variable_-_ForecastedRevenuePercentage": [
              "Succeeded"
            ]
          },
          "else": {
            "actions": {}
          },
          "expression": {
            "or": [
              {
                "equals": [
                  "@triggerBody()['date']",
                  "@null"
                ]
              },
              {
                "equals": [
                  "@triggerBody()['text']",
                  "@null"
                ]
              },
              {
                "equals": [
                  "@triggerBody()['date_1']",
                  "@null"
                ]
              },
              {
                "equals": [
                  "@empty(triggerBody()?['text_1'])",
                  "@true"
                ]
              }
            ]
          },
          "metadata": {
            "operationMetadataId": "562702e7-2a18-40d4-9106-ca1001dadfd0"
          },
          "type": "If"
        },
        "Compose_Default_Forecast": {
          "runAfter": {},
          "metadata": {
            "operationMetadataId": "53274008-64e0-48df-ba7a-3bd4c0a69234"
          },
          "type": "Compose",
          "inputs": {
            "forecastedRevenue": 0,
            "postedRevenue": 0,
            "invoicedRevenue": 0,
            "totalActualRevenue": 0,
            "forecastDeviationPercentage": 0,
            "forecastDeviationAmount": 0,
            "forecastLastUpdated": "@formatDateTime(triggerBody()?['date'],'yyyy-MM-dd HH:mm')"
          }
        },
        "Get_Forecasted_Revenue_Amount": {
          "runAfter": {
            "Parse_JSON_-_Line_Items": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "62c0e4db-ed2a-4878-9984-8f021590aa72"
          },
          "type": "OpenApiConnection",
          "inputs": {
            "parameters": {
              "server": "default",
              "database": "default",
              "table": "[dbo].[vwFORECAST_CONSOLIDATED]",
              "$apply": "filter(IS_SUMMARY_CATEGORY eq 'INTERNAL REVENUE' AND COST_CENTER eq '@{triggerBody()?['text']}' and PERIOD eq @{formatDateTime(triggerBody()?['date'],'yyyyMM')})/aggregate(FD_BALANCE with sum as ForecastedRevenue)",
              "$select": "ForecastedRevenue"
            },
            "host": {
              "apiId": "/providers/Microsoft.PowerApps/apis/shared_sql",
              "operationId": "GetItems_V2",
              "connectionName": "shared_sql"
            }
          }
        },
        "Parse_JSON_-_Line_Items": {
          "runAfter": {
            "Condition_-_are_parameters_empty": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "70440bdd-0e24-4717-ad67-94d5ff6f79b3"
          },
          "type": "ParseJson",
          "inputs": {
            "content": "@triggerBody()?['text_1']",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "code": {
                    "type": [
                      "string",
                      "integer",
                      "number"
                    ]
                  },
                  "amount": {
                    "type": [
                      "integer",
                      "number"
                    ]
                  },
                  "description": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                }
              }
            }
          }
        },
        "Get_Posted_Revenue_Amount": {
          "runAfter": {
            "Parse_JSON_-_Line_Items": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "7c6f696b-2165-4f5f-bd00-35145e06bc37"
          },
          "type": "OpenApiConnection",
          "inputs": {
            "parameters": {
              "server": "default",
              "database": "default",
              "table": "[dbo].[ACCOUNT_SUMMARY]",
              "$apply": "filter(\n    COST_CENTER eq '@{triggerBody()?['text']}' \n    AND PERIOD eq @{formatDateTime(triggerBody()?['date'],'yyyyMM')} \n    AND MAIN_ACCOUNT ge '4000' \n    AND MAIN_ACCOUNT le '4999'\n    AND ENTITY ne '06'\n)/aggregate(\n    BALANCE with sum as PostedRevenue\n)"
            },
            "host": {
              "apiId": "/providers/Microsoft.PowerApps/apis/shared_sql",
              "operationId": "GetItems_V2",
              "connectionName": "shared_sql"
            }
          }
        },
        "Compose_Forecasted_Revenue": {
          "runAfter": {
            "Get_Forecasted_Revenue_Amount": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "2b39ab47-ca82-46fc-b727-da0c0c31df1a"
          },
          "type": "Compose",
          "inputs": "@first(outputs('Get_Forecasted_Revenue_Amount')?['body/value'])?['ForecastedRevenue']"
        },
        "Compose_Posted_Revenue": {
          "runAfter": {
            "Get_Posted_Revenue_Amount": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "228967cd-6c72-417d-b58a-55ec05ec82fa"
          },
          "type": "Compose",
          "inputs": "@coalesce(first(outputs('Get_Posted_Revenue_Amount')?['body/value'])?['PostedRevenue'],0)"
        },
        "Filter_array_to_codes_between_4000_and_4999": {
          "runAfter": {
            "Parse_JSON_-_Line_Items": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "2c5ef0c3-fa16-4d7d-a60e-d976d446802e"
          },
          "type": "Query",
          "inputs": {
            "from": "@body('Parse_JSON_-_Line_Items')",
            "where": "@and(\r\n    not(equals(item()?['code'], '')),\r\n    greaterOrEquals(int(item()?['code']), 4000),\r\n    lessOrEquals(int(item()?['code']), 4999)\r\n)"
          }
        },
        "Initialize_variable_-_InvoicedRevenue": {
          "runAfter": {},
          "metadata": {
            "operationMetadataId": "0b2b15de-f90f-4209-a15e-4a955ed36529"
          },
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "InvoicedRevenue",
                "type": "float",
                "value": 0
              }
            ]
          }
        },
        "For_each_invoice_item": {
          "foreach": "@outputs('Filter_array_to_codes_between_4000_and_4999')['body']",
          "actions": {
            "Compose_Amount_Values": {
              "metadata": {
                "operationMetadataId": "e38f4cd6-880c-40e9-be4b-67adb90844a1"
              },
              "type": "Compose",
              "inputs": "@items('For_each_invoice_item')?['amount']"
            },
            "Increment_variable_-_Invoiced_Revenue": {
              "runAfter": {
                "Compose_Amount_Values": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "576a9185-e5e6-4898-9ca5-8e575dc0d017"
              },
              "type": "IncrementVariable",
              "inputs": {
                "name": "InvoicedRevenue",
                "value": "@outputs('Compose_Amount_Values')"
              }
            }
          },
          "runAfter": {
            "Filter_array_to_codes_between_4000_and_4999": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "e1fbe5de-2ef7-44d4-81e2-872dcd2595ca"
          },
          "type": "Foreach"
        },
        "Compose_Forecast_Item": {
          "runAfter": {
            "Compose_Forecasted_Deviation_Amount_Absolute_Value": [
              "Succeeded"
            ],
            "Compose_Forecast_Last_Updated_Date_Formatted_": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "5a1bbebc-26da-4410-a077-6571f77abce1"
          },
          "type": "Compose",
          "inputs": {
            "forecastedRevenue": "@outputs('Compose_Forecasted_Revenue_Value')",
            "postedRevenue": "@outputs('Compose_Multipy_Posted_Revenue_by_Negative_1')",
            "invoicedRevenue": "@variables('InvoicedRevenue')",
            "totalActualRevenue": "@outputs('Compose_Total_Actual_Revenue')",
            "forecastDeviationPercentage": "@variables('ForecastedRevenuePercentage')",
            "forecastDeviationAmount": "@outputs('Compose_Forecasted_Deviation_Amount_Absolute_Value')",
            "forecastLastUpdated": "@outputs('Compose_Forecast_Last_Updated_Date_Formatted_')"
          }
        },
        "Compose_Forecast_Deviation_Amount": {
          "runAfter": {
            "Compose_Forecasted_Revenue_Value": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "12886189-3f65-4c2b-b147-60577c4f2e2e"
          },
          "type": "Compose",
          "inputs": "@sub(outputs('Compose_Forecasted_Revenue_Value'),outputs('Compose_Total_Actual_Revenue'))"
        },
        "Compose_Forecasted_Revenue_Value": {
          "runAfter": {
            "Compose_Total_Actual_Revenue": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "636d14ae-eb8c-4282-b2e7-057e630db77a"
          },
          "type": "Compose",
          "inputs": "@mul(\r\n    coalesce(\r\n        first(outputs('Get_Forecasted_Revenue_Amount')?['body/value'])?['ForecastedRevenue'], \r\n        0\r\n    ), \r\n    -1\r\n)\r\n"
        },
        "Compose_Total_Actual_Revenue": {
          "runAfter": {
            "Compose_Multipy_Posted_Revenue_by_Negative_1": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "41c9c8c9-5f5f-4524-adfa-3889a9be2444"
          },
          "type": "Compose",
          "inputs": "@add(outputs('Compose_Multipy_Posted_Revenue_by_Negative_1'),variables('InvoicedRevenue'))"
        },
        "Compose_Forecasted_Deviation_Amount_Absolute_Value": {
          "runAfter": {
            "Compose_Forecast_Deviation_Amount": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "36c8992f-d49f-45c1-b9e4-9fc110077e44"
          },
          "type": "Compose",
          "inputs": "@if(\r\n    lessOrEquals(\r\n        outputs('Compose_Forecast_Deviation_Amount'), \r\n        0\r\n    ), \r\n    mul(\r\n        outputs('Compose_Forecast_Deviation_Amount'), \r\n        -1\r\n    ), \r\n    outputs('Compose_Forecast_Deviation_Amount')\r\n)"
        },
        "Get_Forecast_Last_Updated_Date": {
          "runAfter": {
            "Parse_JSON_-_Line_Items": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "66d36739-e892-41b6-bb36-19eee9a6d1f4"
          },
          "type": "OpenApiConnection",
          "inputs": {
            "parameters": {
              "server": "default",
              "database": "default",
              "table": "[dbo].[vwFORECAST_CONSOLIDATED]",
              "$filter": "COST_CENTER eq '@{triggerBody()?['text']}'",
              "$orderby": "DW_LOADED_DTTM desc",
              "$top": 1,
              "$select": "DW_LOADED_DTTM"
            },
            "host": {
              "apiId": "/providers/Microsoft.PowerApps/apis/shared_sql",
              "operationId": "GetItems_V2",
              "connectionName": "shared_sql"
            }
          }
        },
        "Compose_Forecast_Last_Updated_Date": {
          "runAfter": {
            "Get_Forecast_Last_Updated_Date": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "82dc1faf-4aa8-4b90-b491-df5b63b33100"
          },
          "type": "Compose",
          "inputs": "@first(outputs('Get_Forecast_Last_Updated_Date')?['body/value'])?['DW_LOADED_DTTM']"
        },
        "Compose_Forecast_Last_Updated_Date_Formatted_": {
          "runAfter": {
            "Condition_Forecasted_Revenue_Is_Not_Null": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "af63a8c5-25ca-4d64-99d1-62dd670bd94e"
          },
          "type": "Compose",
          "inputs": "@if(or(equals(outputs('Compose_Forecast_Last_Updated_Date'), null), equals(outputs('Compose_Forecast_Last_Updated_Date'), '')), '', formatDateTime(outputs('Compose_Forecast_Last_Updated_Date'),'yyyy-MM-dd HH:mm'))"
        },
        "Respond_to_a_Power_App_or_flow_1": {
          "runAfter": {
            "Compose_Forecast_Item": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "aaa28809-7081-4b56-b164-e261d5799dd9"
          },
          "type": "Response",
          "kind": "PowerApp",
          "inputs": {
            "schema": {
              "type": "object",
              "properties": {
                "forecast": {
                  "title": "Forecast",
                  "x-ms-dynamically-added": true,
                  "type": "string"
                }
              },
              "additionalProperties": {}
            },
            "statusCode": 200,
            "body": {
              "forecast": "@{outputs('Compose_Forecast_Item')}"
            }
          }
        },
        "Compose_Multipy_Posted_Revenue_by_Negative_1": {
          "runAfter": {
            "Compose_Forecasted_Revenue": [
              "Succeeded"
            ],
            "Compose_Posted_Revenue": [
              "Succeeded"
            ],
            "For_each_invoice_item": [
              "Succeeded"
            ],
            "Compose_Forecast_Last_Updated_Date": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "e6c092b2-ad3f-417d-9f2d-de81f2798768"
          },
          "type": "Compose",
          "inputs": "@mul(outputs('Compose_Posted_Revenue'), -1)"
        },
        "Condition_Forecasted_Revenue_Is_Not_Null": {
          "actions": {
            "Compose_Forecast_Deviation_Percent": {
              "metadata": {
                "operationMetadataId": "cec72c85-7b51-4ee4-af44-574238d93c49"
              },
              "type": "Compose",
              "inputs": "@mul(\r\n    div(\r\n        sub(\r\n            outputs('Compose_Forecasted_Revenue_Value'),\r\n            outputs('Compose_Total_Actual_Revenue')\r\n        ),\r\n        outputs('Compose_Forecasted_Revenue_Value')\r\n    ),\r\n    100\r\n)"
            },
            "Compose_Forecasted_Deviation_Percent_Absolute_Value": {
              "runAfter": {
                "Compose_Forecast_Deviation_Percent": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "4f48e4ce-5041-4f72-957c-2b787de91432"
              },
              "type": "Compose",
              "inputs": "@if(\r\n    lessOrEquals(\r\n        outputs('Compose_Forecast_Deviation_Percent'), \r\n        0\r\n    ), \r\n    mul(\r\n        outputs('Compose_Forecast_Deviation_Percent'), \r\n        -1\r\n    ), \r\n    outputs('Compose_Forecast_Deviation_Percent')\r\n)"
            },
            "Set_variable_-_ForecastedRevenuePercentage": {
              "runAfter": {
                "Compose_Forecasted_Deviation_Percent_Absolute_Value": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "ac45b1d5-1af1-44cf-9b42-412ee2d699f3"
              },
              "type": "SetVariable",
              "inputs": {
                "name": "ForecastedRevenuePercentage",
                "value": "@outputs('Compose_Forecasted_Deviation_Percent_Absolute_Value')"
              }
            }
          },
          "runAfter": {
            "Compose_Forecasted_Revenue_Value": [
              "Succeeded"
            ]
          },
          "else": {
            "actions": {}
          },
          "expression": {
            "and": [
              {
                "not": {
                  "equals": [
                    "@outputs('Compose_Forecasted_Revenue_Value')",
                    0
                  ]
                }
              }
            ]
          },
          "metadata": {
            "operationMetadataId": "8ac86bf1-3851-4ce6-b90d-c40a2936bf82"
          },
          "type": "If"
        },
        "Initialize_variable_-_ForecastedRevenuePercentage": {
          "runAfter": {},
          "metadata": {
            "operationMetadataId": "e4b3cf63-a6dc-464e-9274-bae53601edac"
          },
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "ForecastedRevenuePercentage",
                "type": "float",
                "value": 0
              }
            ]
          }
        }
      }
    },
    "templateName": null
  },
  "schemaVersion": "1.0.0.0"
}